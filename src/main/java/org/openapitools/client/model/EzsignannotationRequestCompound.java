/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.EnumHorizontalalignment;
import org.openapitools.client.model.EnumVerticalalignment;
import org.openapitools.client.model.FieldEEzsignannotationType;
import org.openapitools.client.model.TextstylestaticRequestCompound;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * A Ezsignannotation Object and children
 **/
@ApiModel(description = "A Ezsignannotation Object and children")
public class EzsignannotationRequestCompound {
  
  @SerializedName("pkiEzsignannotationID")
  private Integer pkiEzsignannotationID = null;
  @SerializedName("fkiEzsigndocumentID")
  private Integer fkiEzsigndocumentID = null;
  @SerializedName("eEzsignannotationHorizontalalignment")
  private EnumHorizontalalignment eEzsignannotationHorizontalalignment = null;
  @SerializedName("eEzsignannotationVerticalalignment")
  private EnumVerticalalignment eEzsignannotationVerticalalignment = null;
  @SerializedName("eEzsignannotationType")
  private FieldEEzsignannotationType eEzsignannotationType = null;
  @SerializedName("iEzsignannotationX")
  private Integer iEzsignannotationX = null;
  @SerializedName("iEzsignannotationY")
  private Integer iEzsignannotationY = null;
  @SerializedName("iEzsignannotationWidth")
  private Integer iEzsignannotationWidth = null;
  @SerializedName("iEzsignannotationHeight")
  private Integer iEzsignannotationHeight = null;
  @SerializedName("sEzsignannotationText")
  private String sEzsignannotationText = null;
  @SerializedName("iEzsignpagePagenumber")
  private Integer iEzsignpagePagenumber = null;
  @SerializedName("objTextstylestatic")
  private TextstylestaticRequestCompound objTextstylestatic = null;

  /**
   * The unique ID of the Ezsignannotation
   **/
  @ApiModelProperty(value = "The unique ID of the Ezsignannotation")
  public Integer getPkiEzsignannotationID() {
    return pkiEzsignannotationID;
  }
  public void setPkiEzsignannotationID(Integer pkiEzsignannotationID) {
    this.pkiEzsignannotationID = pkiEzsignannotationID;
  }

  /**
   * The unique ID of the Ezsigndocument
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Ezsigndocument")
  public Integer getFkiEzsigndocumentID() {
    return fkiEzsigndocumentID;
  }
  public void setFkiEzsigndocumentID(Integer fkiEzsigndocumentID) {
    this.fkiEzsigndocumentID = fkiEzsigndocumentID;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public EnumHorizontalalignment getEEzsignannotationHorizontalalignment() {
    return eEzsignannotationHorizontalalignment;
  }
  public void setEEzsignannotationHorizontalalignment(EnumHorizontalalignment eEzsignannotationHorizontalalignment) {
    this.eEzsignannotationHorizontalalignment = eEzsignannotationHorizontalalignment;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public EnumVerticalalignment getEEzsignannotationVerticalalignment() {
    return eEzsignannotationVerticalalignment;
  }
  public void setEEzsignannotationVerticalalignment(EnumVerticalalignment eEzsignannotationVerticalalignment) {
    this.eEzsignannotationVerticalalignment = eEzsignannotationVerticalalignment;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public FieldEEzsignannotationType getEEzsignannotationType() {
    return eEzsignannotationType;
  }
  public void setEEzsignannotationType(FieldEEzsignannotationType eEzsignannotationType) {
    this.eEzsignannotationType = eEzsignannotationType;
  }

  /**
   * The X coordinate (Horizontal) where to put the Ezsignannotation on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignannotation 2 inches from the left border of the page, you would use \"200\" for the X coordinate.
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The X coordinate (Horizontal) where to put the Ezsignannotation on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignannotation 2 inches from the left border of the page, you would use \"200\" for the X coordinate.")
  public Integer getIEzsignannotationX() {
    return iEzsignannotationX;
  }
  public void setIEzsignannotationX(Integer iEzsignannotationX) {
    this.iEzsignannotationX = iEzsignannotationX;
  }

  /**
   * The Y coordinate (Vertical) where to put the Ezsignannotation on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignannotation 3 inches from the top border of the page, you would use \"300\" for the Y coordinate.
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The Y coordinate (Vertical) where to put the Ezsignannotation on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignannotation 3 inches from the top border of the page, you would use \"300\" for the Y coordinate.")
  public Integer getIEzsignannotationY() {
    return iEzsignannotationY;
  }
  public void setIEzsignannotationY(Integer iEzsignannotationY) {
    this.iEzsignannotationY = iEzsignannotationY;
  }

  /**
   * The Width of the Ezsignannotation.  Width is calculated at 100dpi (dot per inch). So for example, if you want to have the width of the Ezsignannotation to be 3 inches, you would use \"300\" for the Width.
   * minimum: 0
   **/
  @ApiModelProperty(value = "The Width of the Ezsignannotation.  Width is calculated at 100dpi (dot per inch). So for example, if you want to have the width of the Ezsignannotation to be 3 inches, you would use \"300\" for the Width.")
  public Integer getIEzsignannotationWidth() {
    return iEzsignannotationWidth;
  }
  public void setIEzsignannotationWidth(Integer iEzsignannotationWidth) {
    this.iEzsignannotationWidth = iEzsignannotationWidth;
  }

  /**
   * The Height of the Ezsignannotation.  Height is calculated at 100dpi (dot per inch). So for example, if you want to have the height of the Ezsignannotation to be 2 inches, you would use \"200\" for the Height.  This can only be set if eEzsignannotationType is **StrikethroughBlock** or **Text**
   * minimum: 0
   **/
  @ApiModelProperty(value = "The Height of the Ezsignannotation.  Height is calculated at 100dpi (dot per inch). So for example, if you want to have the height of the Ezsignannotation to be 2 inches, you would use \"200\" for the Height.  This can only be set if eEzsignannotationType is **StrikethroughBlock** or **Text**")
  public Integer getIEzsignannotationHeight() {
    return iEzsignannotationHeight;
  }
  public void setIEzsignannotationHeight(Integer iEzsignannotationHeight) {
    this.iEzsignannotationHeight = iEzsignannotationHeight;
  }

  /**
   * The Text of the Ezsignannotation
   **/
  @ApiModelProperty(value = "The Text of the Ezsignannotation")
  public String getSEzsignannotationText() {
    return sEzsignannotationText;
  }
  public void setSEzsignannotationText(String sEzsignannotationText) {
    this.sEzsignannotationText = sEzsignannotationText;
  }

  /**
   * The page number in the Ezsigndocument
   * minimum: 1
   **/
  @ApiModelProperty(required = true, value = "The page number in the Ezsigndocument")
  public Integer getIEzsignpagePagenumber() {
    return iEzsignpagePagenumber;
  }
  public void setIEzsignpagePagenumber(Integer iEzsignpagePagenumber) {
    this.iEzsignpagePagenumber = iEzsignpagePagenumber;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public TextstylestaticRequestCompound getObjTextstylestatic() {
    return objTextstylestatic;
  }
  public void setObjTextstylestatic(TextstylestaticRequestCompound objTextstylestatic) {
    this.objTextstylestatic = objTextstylestatic;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignannotationRequestCompound ezsignannotationRequestCompound = (EzsignannotationRequestCompound) o;
    return (this.pkiEzsignannotationID == null ? ezsignannotationRequestCompound.pkiEzsignannotationID == null : this.pkiEzsignannotationID.equals(ezsignannotationRequestCompound.pkiEzsignannotationID)) &&
        (this.fkiEzsigndocumentID == null ? ezsignannotationRequestCompound.fkiEzsigndocumentID == null : this.fkiEzsigndocumentID.equals(ezsignannotationRequestCompound.fkiEzsigndocumentID)) &&
        (this.eEzsignannotationHorizontalalignment == null ? ezsignannotationRequestCompound.eEzsignannotationHorizontalalignment == null : this.eEzsignannotationHorizontalalignment.equals(ezsignannotationRequestCompound.eEzsignannotationHorizontalalignment)) &&
        (this.eEzsignannotationVerticalalignment == null ? ezsignannotationRequestCompound.eEzsignannotationVerticalalignment == null : this.eEzsignannotationVerticalalignment.equals(ezsignannotationRequestCompound.eEzsignannotationVerticalalignment)) &&
        (this.eEzsignannotationType == null ? ezsignannotationRequestCompound.eEzsignannotationType == null : this.eEzsignannotationType.equals(ezsignannotationRequestCompound.eEzsignannotationType)) &&
        (this.iEzsignannotationX == null ? ezsignannotationRequestCompound.iEzsignannotationX == null : this.iEzsignannotationX.equals(ezsignannotationRequestCompound.iEzsignannotationX)) &&
        (this.iEzsignannotationY == null ? ezsignannotationRequestCompound.iEzsignannotationY == null : this.iEzsignannotationY.equals(ezsignannotationRequestCompound.iEzsignannotationY)) &&
        (this.iEzsignannotationWidth == null ? ezsignannotationRequestCompound.iEzsignannotationWidth == null : this.iEzsignannotationWidth.equals(ezsignannotationRequestCompound.iEzsignannotationWidth)) &&
        (this.iEzsignannotationHeight == null ? ezsignannotationRequestCompound.iEzsignannotationHeight == null : this.iEzsignannotationHeight.equals(ezsignannotationRequestCompound.iEzsignannotationHeight)) &&
        (this.sEzsignannotationText == null ? ezsignannotationRequestCompound.sEzsignannotationText == null : this.sEzsignannotationText.equals(ezsignannotationRequestCompound.sEzsignannotationText)) &&
        (this.iEzsignpagePagenumber == null ? ezsignannotationRequestCompound.iEzsignpagePagenumber == null : this.iEzsignpagePagenumber.equals(ezsignannotationRequestCompound.iEzsignpagePagenumber)) &&
        (this.objTextstylestatic == null ? ezsignannotationRequestCompound.objTextstylestatic == null : this.objTextstylestatic.equals(ezsignannotationRequestCompound.objTextstylestatic));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.pkiEzsignannotationID == null ? 0: this.pkiEzsignannotationID.hashCode());
    result = 31 * result + (this.fkiEzsigndocumentID == null ? 0: this.fkiEzsigndocumentID.hashCode());
    result = 31 * result + (this.eEzsignannotationHorizontalalignment == null ? 0: this.eEzsignannotationHorizontalalignment.hashCode());
    result = 31 * result + (this.eEzsignannotationVerticalalignment == null ? 0: this.eEzsignannotationVerticalalignment.hashCode());
    result = 31 * result + (this.eEzsignannotationType == null ? 0: this.eEzsignannotationType.hashCode());
    result = 31 * result + (this.iEzsignannotationX == null ? 0: this.iEzsignannotationX.hashCode());
    result = 31 * result + (this.iEzsignannotationY == null ? 0: this.iEzsignannotationY.hashCode());
    result = 31 * result + (this.iEzsignannotationWidth == null ? 0: this.iEzsignannotationWidth.hashCode());
    result = 31 * result + (this.iEzsignannotationHeight == null ? 0: this.iEzsignannotationHeight.hashCode());
    result = 31 * result + (this.sEzsignannotationText == null ? 0: this.sEzsignannotationText.hashCode());
    result = 31 * result + (this.iEzsignpagePagenumber == null ? 0: this.iEzsignpagePagenumber.hashCode());
    result = 31 * result + (this.objTextstylestatic == null ? 0: this.objTextstylestatic.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignannotationRequestCompound {\n");
    
    sb.append("  pkiEzsignannotationID: ").append(pkiEzsignannotationID).append("\n");
    sb.append("  fkiEzsigndocumentID: ").append(fkiEzsigndocumentID).append("\n");
    sb.append("  eEzsignannotationHorizontalalignment: ").append(eEzsignannotationHorizontalalignment).append("\n");
    sb.append("  eEzsignannotationVerticalalignment: ").append(eEzsignannotationVerticalalignment).append("\n");
    sb.append("  eEzsignannotationType: ").append(eEzsignannotationType).append("\n");
    sb.append("  iEzsignannotationX: ").append(iEzsignannotationX).append("\n");
    sb.append("  iEzsignannotationY: ").append(iEzsignannotationY).append("\n");
    sb.append("  iEzsignannotationWidth: ").append(iEzsignannotationWidth).append("\n");
    sb.append("  iEzsignannotationHeight: ").append(iEzsignannotationHeight).append("\n");
    sb.append("  sEzsignannotationText: ").append(sEzsignannotationText).append("\n");
    sb.append("  iEzsignpagePagenumber: ").append(iEzsignpagePagenumber).append("\n");
    sb.append("  objTextstylestatic: ").append(objTextstylestatic).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
