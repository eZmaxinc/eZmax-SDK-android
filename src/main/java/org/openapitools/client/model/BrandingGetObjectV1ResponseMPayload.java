/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.14
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.BrandingResponseCompound;
import org.openapitools.client.model.FieldEBrandingLogo;
import org.openapitools.client.model.MultilingualBrandingDescription;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Payload for GET /1/object/branding/{pkiBrandingID}
 **/
@ApiModel(description = "Payload for GET /1/object/branding/{pkiBrandingID}")
public class BrandingGetObjectV1ResponseMPayload {
  
  @SerializedName("pkiBrandingID")
  private Integer pkiBrandingID = null;
  @SerializedName("objBrandingDescription")
  private MultilingualBrandingDescription objBrandingDescription = null;
  @SerializedName("sBrandingDescriptionX")
  private String sBrandingDescriptionX = null;
  @SerializedName("eBrandingLogo")
  private FieldEBrandingLogo eBrandingLogo = null;
  @SerializedName("iBrandingColortext")
  private Integer iBrandingColortext = null;
  @SerializedName("iBrandingColortextlinkbox")
  private Integer iBrandingColortextlinkbox = null;
  @SerializedName("iBrandingColortextbutton")
  private Integer iBrandingColortextbutton = null;
  @SerializedName("iBrandingColorbackground")
  private Integer iBrandingColorbackground = null;
  @SerializedName("iBrandingColorbackgroundbutton")
  private Integer iBrandingColorbackgroundbutton = null;
  @SerializedName("iBrandingColorbackgroundsmallbox")
  private Integer iBrandingColorbackgroundsmallbox = null;
  @SerializedName("bBrandingIsactive")
  private Boolean bBrandingIsactive = null;
  @SerializedName("sBrandingLogourl")
  private String sBrandingLogourl = null;

  /**
   * The unique ID of the Branding
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Branding")
  public Integer getPkiBrandingID() {
    return pkiBrandingID;
  }
  public void setPkiBrandingID(Integer pkiBrandingID) {
    this.pkiBrandingID = pkiBrandingID;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public MultilingualBrandingDescription getObjBrandingDescription() {
    return objBrandingDescription;
  }
  public void setObjBrandingDescription(MultilingualBrandingDescription objBrandingDescription) {
    this.objBrandingDescription = objBrandingDescription;
  }

  /**
   * The Description of the Branding in the language of the requester
   **/
  @ApiModelProperty(required = true, value = "The Description of the Branding in the language of the requester")
  public String getSBrandingDescriptionX() {
    return sBrandingDescriptionX;
  }
  public void setSBrandingDescriptionX(String sBrandingDescriptionX) {
    this.sBrandingDescriptionX = sBrandingDescriptionX;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public FieldEBrandingLogo getEBrandingLogo() {
    return eBrandingLogo;
  }
  public void setEBrandingLogo(FieldEBrandingLogo eBrandingLogo) {
    this.eBrandingLogo = eBrandingLogo;
  }

  /**
   * The color of the text. This is a RGB color converted into integer
   * minimum: 0
   * maximum: 16777215
   **/
  @ApiModelProperty(required = true, value = "The color of the text. This is a RGB color converted into integer")
  public Integer getIBrandingColortext() {
    return iBrandingColortext;
  }
  public void setIBrandingColortext(Integer iBrandingColortext) {
    this.iBrandingColortext = iBrandingColortext;
  }

  /**
   * The color of the text in the link box. This is a RGB color converted into integer
   * minimum: 0
   * maximum: 16777215
   **/
  @ApiModelProperty(required = true, value = "The color of the text in the link box. This is a RGB color converted into integer")
  public Integer getIBrandingColortextlinkbox() {
    return iBrandingColortextlinkbox;
  }
  public void setIBrandingColortextlinkbox(Integer iBrandingColortextlinkbox) {
    this.iBrandingColortextlinkbox = iBrandingColortextlinkbox;
  }

  /**
   * The color of the text in the button. This is a RGB color converted into integer
   * minimum: 0
   * maximum: 16777215
   **/
  @ApiModelProperty(required = true, value = "The color of the text in the button. This is a RGB color converted into integer")
  public Integer getIBrandingColortextbutton() {
    return iBrandingColortextbutton;
  }
  public void setIBrandingColortextbutton(Integer iBrandingColortextbutton) {
    this.iBrandingColortextbutton = iBrandingColortextbutton;
  }

  /**
   * The color of the background. This is a RGB color converted into integer
   * minimum: 0
   * maximum: 16777215
   **/
  @ApiModelProperty(required = true, value = "The color of the background. This is a RGB color converted into integer")
  public Integer getIBrandingColorbackground() {
    return iBrandingColorbackground;
  }
  public void setIBrandingColorbackground(Integer iBrandingColorbackground) {
    this.iBrandingColorbackground = iBrandingColorbackground;
  }

  /**
   * The color of the background of the button. This is a RGB color converted into integer
   * minimum: 0
   * maximum: 16777215
   **/
  @ApiModelProperty(required = true, value = "The color of the background of the button. This is a RGB color converted into integer")
  public Integer getIBrandingColorbackgroundbutton() {
    return iBrandingColorbackgroundbutton;
  }
  public void setIBrandingColorbackgroundbutton(Integer iBrandingColorbackgroundbutton) {
    this.iBrandingColorbackgroundbutton = iBrandingColorbackgroundbutton;
  }

  /**
   * The color of the background of the small box. This is a RGB color converted into integer
   * minimum: 0
   * maximum: 16777215
   **/
  @ApiModelProperty(required = true, value = "The color of the background of the small box. This is a RGB color converted into integer")
  public Integer getIBrandingColorbackgroundsmallbox() {
    return iBrandingColorbackgroundsmallbox;
  }
  public void setIBrandingColorbackgroundsmallbox(Integer iBrandingColorbackgroundsmallbox) {
    this.iBrandingColorbackgroundsmallbox = iBrandingColorbackgroundsmallbox;
  }

  /**
   * Whether the Branding is active or not
   **/
  @ApiModelProperty(required = true, value = "Whether the Branding is active or not")
  public Boolean getBBrandingIsactive() {
    return bBrandingIsactive;
  }
  public void setBBrandingIsactive(Boolean bBrandingIsactive) {
    this.bBrandingIsactive = bBrandingIsactive;
  }

  /**
   * The url of the picture used as logo in the Branding
   **/
  @ApiModelProperty(value = "The url of the picture used as logo in the Branding")
  public String getSBrandingLogourl() {
    return sBrandingLogourl;
  }
  public void setSBrandingLogourl(String sBrandingLogourl) {
    this.sBrandingLogourl = sBrandingLogourl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrandingGetObjectV1ResponseMPayload brandingGetObjectV1ResponseMPayload = (BrandingGetObjectV1ResponseMPayload) o;
    return (this.pkiBrandingID == null ? brandingGetObjectV1ResponseMPayload.pkiBrandingID == null : this.pkiBrandingID.equals(brandingGetObjectV1ResponseMPayload.pkiBrandingID)) &&
        (this.objBrandingDescription == null ? brandingGetObjectV1ResponseMPayload.objBrandingDescription == null : this.objBrandingDescription.equals(brandingGetObjectV1ResponseMPayload.objBrandingDescription)) &&
        (this.sBrandingDescriptionX == null ? brandingGetObjectV1ResponseMPayload.sBrandingDescriptionX == null : this.sBrandingDescriptionX.equals(brandingGetObjectV1ResponseMPayload.sBrandingDescriptionX)) &&
        (this.eBrandingLogo == null ? brandingGetObjectV1ResponseMPayload.eBrandingLogo == null : this.eBrandingLogo.equals(brandingGetObjectV1ResponseMPayload.eBrandingLogo)) &&
        (this.iBrandingColortext == null ? brandingGetObjectV1ResponseMPayload.iBrandingColortext == null : this.iBrandingColortext.equals(brandingGetObjectV1ResponseMPayload.iBrandingColortext)) &&
        (this.iBrandingColortextlinkbox == null ? brandingGetObjectV1ResponseMPayload.iBrandingColortextlinkbox == null : this.iBrandingColortextlinkbox.equals(brandingGetObjectV1ResponseMPayload.iBrandingColortextlinkbox)) &&
        (this.iBrandingColortextbutton == null ? brandingGetObjectV1ResponseMPayload.iBrandingColortextbutton == null : this.iBrandingColortextbutton.equals(brandingGetObjectV1ResponseMPayload.iBrandingColortextbutton)) &&
        (this.iBrandingColorbackground == null ? brandingGetObjectV1ResponseMPayload.iBrandingColorbackground == null : this.iBrandingColorbackground.equals(brandingGetObjectV1ResponseMPayload.iBrandingColorbackground)) &&
        (this.iBrandingColorbackgroundbutton == null ? brandingGetObjectV1ResponseMPayload.iBrandingColorbackgroundbutton == null : this.iBrandingColorbackgroundbutton.equals(brandingGetObjectV1ResponseMPayload.iBrandingColorbackgroundbutton)) &&
        (this.iBrandingColorbackgroundsmallbox == null ? brandingGetObjectV1ResponseMPayload.iBrandingColorbackgroundsmallbox == null : this.iBrandingColorbackgroundsmallbox.equals(brandingGetObjectV1ResponseMPayload.iBrandingColorbackgroundsmallbox)) &&
        (this.bBrandingIsactive == null ? brandingGetObjectV1ResponseMPayload.bBrandingIsactive == null : this.bBrandingIsactive.equals(brandingGetObjectV1ResponseMPayload.bBrandingIsactive)) &&
        (this.sBrandingLogourl == null ? brandingGetObjectV1ResponseMPayload.sBrandingLogourl == null : this.sBrandingLogourl.equals(brandingGetObjectV1ResponseMPayload.sBrandingLogourl));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.pkiBrandingID == null ? 0: this.pkiBrandingID.hashCode());
    result = 31 * result + (this.objBrandingDescription == null ? 0: this.objBrandingDescription.hashCode());
    result = 31 * result + (this.sBrandingDescriptionX == null ? 0: this.sBrandingDescriptionX.hashCode());
    result = 31 * result + (this.eBrandingLogo == null ? 0: this.eBrandingLogo.hashCode());
    result = 31 * result + (this.iBrandingColortext == null ? 0: this.iBrandingColortext.hashCode());
    result = 31 * result + (this.iBrandingColortextlinkbox == null ? 0: this.iBrandingColortextlinkbox.hashCode());
    result = 31 * result + (this.iBrandingColortextbutton == null ? 0: this.iBrandingColortextbutton.hashCode());
    result = 31 * result + (this.iBrandingColorbackground == null ? 0: this.iBrandingColorbackground.hashCode());
    result = 31 * result + (this.iBrandingColorbackgroundbutton == null ? 0: this.iBrandingColorbackgroundbutton.hashCode());
    result = 31 * result + (this.iBrandingColorbackgroundsmallbox == null ? 0: this.iBrandingColorbackgroundsmallbox.hashCode());
    result = 31 * result + (this.bBrandingIsactive == null ? 0: this.bBrandingIsactive.hashCode());
    result = 31 * result + (this.sBrandingLogourl == null ? 0: this.sBrandingLogourl.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrandingGetObjectV1ResponseMPayload {\n");
    
    sb.append("  pkiBrandingID: ").append(pkiBrandingID).append("\n");
    sb.append("  objBrandingDescription: ").append(objBrandingDescription).append("\n");
    sb.append("  sBrandingDescriptionX: ").append(sBrandingDescriptionX).append("\n");
    sb.append("  eBrandingLogo: ").append(eBrandingLogo).append("\n");
    sb.append("  iBrandingColortext: ").append(iBrandingColortext).append("\n");
    sb.append("  iBrandingColortextlinkbox: ").append(iBrandingColortextlinkbox).append("\n");
    sb.append("  iBrandingColortextbutton: ").append(iBrandingColortextbutton).append("\n");
    sb.append("  iBrandingColorbackground: ").append(iBrandingColorbackground).append("\n");
    sb.append("  iBrandingColorbackgroundbutton: ").append(iBrandingColorbackgroundbutton).append("\n");
    sb.append("  iBrandingColorbackgroundsmallbox: ").append(iBrandingColorbackgroundsmallbox).append("\n");
    sb.append("  bBrandingIsactive: ").append(bBrandingIsactive).append("\n");
    sb.append("  sBrandingLogourl: ").append(sBrandingLogourl).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
