/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * A Custom Discussionconfiguration Object
 **/
@ApiModel(description = "A Custom Discussionconfiguration Object")
public class CustomDiscussionconfigurationResponse {
  
  @SerializedName("bDiscussionconfigurationCompletehistorywhenadded")
  private Boolean bDiscussionconfigurationCompletehistorywhenadded = null;
  @SerializedName("bDiscussionconfigurationCreateallowed")
  private Boolean bDiscussionconfigurationCreateallowed = null;
  @SerializedName("bDiscussionconfigurationDeleteallowed")
  private Boolean bDiscussionconfigurationDeleteallowed = null;
  @SerializedName("bDiscussionconfigurationDeletediscussionmessageallowed")
  private Boolean bDiscussionconfigurationDeletediscussionmessageallowed = null;
  @SerializedName("bDiscussionconfigurationEditdiscussionmessageallowed")
  private Boolean bDiscussionconfigurationEditdiscussionmessageallowed = null;

  /**
   * If the added Discussionmembership will have access to the entire history or not
   **/
  @ApiModelProperty(required = true, value = "If the added Discussionmembership will have access to the entire history or not")
  public Boolean getBDiscussionconfigurationCompletehistorywhenadded() {
    return bDiscussionconfigurationCompletehistorywhenadded;
  }
  public void setBDiscussionconfigurationCompletehistorywhenadded(Boolean bDiscussionconfigurationCompletehistorywhenadded) {
    this.bDiscussionconfigurationCompletehistorywhenadded = bDiscussionconfigurationCompletehistorywhenadded;
  }

  /**
   * If the the creation of the Discussion is allowed or not
   **/
  @ApiModelProperty(required = true, value = "If the the creation of the Discussion is allowed or not")
  public Boolean getBDiscussionconfigurationCreateallowed() {
    return bDiscussionconfigurationCreateallowed;
  }
  public void setBDiscussionconfigurationCreateallowed(Boolean bDiscussionconfigurationCreateallowed) {
    this.bDiscussionconfigurationCreateallowed = bDiscussionconfigurationCreateallowed;
  }

  /**
   * If the the destruction of the Discussion is allowed or not
   **/
  @ApiModelProperty(required = true, value = "If the the destruction of the Discussion is allowed or not")
  public Boolean getBDiscussionconfigurationDeleteallowed() {
    return bDiscussionconfigurationDeleteallowed;
  }
  public void setBDiscussionconfigurationDeleteallowed(Boolean bDiscussionconfigurationDeleteallowed) {
    this.bDiscussionconfigurationDeleteallowed = bDiscussionconfigurationDeleteallowed;
  }

  /**
   * If the the destruction of the Discussionmessage is allowed or not
   **/
  @ApiModelProperty(required = true, value = "If the the destruction of the Discussionmessage is allowed or not")
  public Boolean getBDiscussionconfigurationDeletediscussionmessageallowed() {
    return bDiscussionconfigurationDeletediscussionmessageallowed;
  }
  public void setBDiscussionconfigurationDeletediscussionmessageallowed(Boolean bDiscussionconfigurationDeletediscussionmessageallowed) {
    this.bDiscussionconfigurationDeletediscussionmessageallowed = bDiscussionconfigurationDeletediscussionmessageallowed;
  }

  /**
   * If the the creation of the Discussionmessage is allowed or not
   **/
  @ApiModelProperty(required = true, value = "If the the creation of the Discussionmessage is allowed or not")
  public Boolean getBDiscussionconfigurationEditdiscussionmessageallowed() {
    return bDiscussionconfigurationEditdiscussionmessageallowed;
  }
  public void setBDiscussionconfigurationEditdiscussionmessageallowed(Boolean bDiscussionconfigurationEditdiscussionmessageallowed) {
    this.bDiscussionconfigurationEditdiscussionmessageallowed = bDiscussionconfigurationEditdiscussionmessageallowed;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomDiscussionconfigurationResponse customDiscussionconfigurationResponse = (CustomDiscussionconfigurationResponse) o;
    return (this.bDiscussionconfigurationCompletehistorywhenadded == null ? customDiscussionconfigurationResponse.bDiscussionconfigurationCompletehistorywhenadded == null : this.bDiscussionconfigurationCompletehistorywhenadded.equals(customDiscussionconfigurationResponse.bDiscussionconfigurationCompletehistorywhenadded)) &&
        (this.bDiscussionconfigurationCreateallowed == null ? customDiscussionconfigurationResponse.bDiscussionconfigurationCreateallowed == null : this.bDiscussionconfigurationCreateallowed.equals(customDiscussionconfigurationResponse.bDiscussionconfigurationCreateallowed)) &&
        (this.bDiscussionconfigurationDeleteallowed == null ? customDiscussionconfigurationResponse.bDiscussionconfigurationDeleteallowed == null : this.bDiscussionconfigurationDeleteallowed.equals(customDiscussionconfigurationResponse.bDiscussionconfigurationDeleteallowed)) &&
        (this.bDiscussionconfigurationDeletediscussionmessageallowed == null ? customDiscussionconfigurationResponse.bDiscussionconfigurationDeletediscussionmessageallowed == null : this.bDiscussionconfigurationDeletediscussionmessageallowed.equals(customDiscussionconfigurationResponse.bDiscussionconfigurationDeletediscussionmessageallowed)) &&
        (this.bDiscussionconfigurationEditdiscussionmessageallowed == null ? customDiscussionconfigurationResponse.bDiscussionconfigurationEditdiscussionmessageallowed == null : this.bDiscussionconfigurationEditdiscussionmessageallowed.equals(customDiscussionconfigurationResponse.bDiscussionconfigurationEditdiscussionmessageallowed));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.bDiscussionconfigurationCompletehistorywhenadded == null ? 0: this.bDiscussionconfigurationCompletehistorywhenadded.hashCode());
    result = 31 * result + (this.bDiscussionconfigurationCreateallowed == null ? 0: this.bDiscussionconfigurationCreateallowed.hashCode());
    result = 31 * result + (this.bDiscussionconfigurationDeleteallowed == null ? 0: this.bDiscussionconfigurationDeleteallowed.hashCode());
    result = 31 * result + (this.bDiscussionconfigurationDeletediscussionmessageallowed == null ? 0: this.bDiscussionconfigurationDeletediscussionmessageallowed.hashCode());
    result = 31 * result + (this.bDiscussionconfigurationEditdiscussionmessageallowed == null ? 0: this.bDiscussionconfigurationEditdiscussionmessageallowed.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomDiscussionconfigurationResponse {\n");
    
    sb.append("  bDiscussionconfigurationCompletehistorywhenadded: ").append(bDiscussionconfigurationCompletehistorywhenadded).append("\n");
    sb.append("  bDiscussionconfigurationCreateallowed: ").append(bDiscussionconfigurationCreateallowed).append("\n");
    sb.append("  bDiscussionconfigurationDeleteallowed: ").append(bDiscussionconfigurationDeleteallowed).append("\n");
    sb.append("  bDiscussionconfigurationDeletediscussionmessageallowed: ").append(bDiscussionconfigurationDeletediscussionmessageallowed).append("\n");
    sb.append("  bDiscussionconfigurationEditdiscussionmessageallowed: ").append(bDiscussionconfigurationEditdiscussionmessageallowed).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
