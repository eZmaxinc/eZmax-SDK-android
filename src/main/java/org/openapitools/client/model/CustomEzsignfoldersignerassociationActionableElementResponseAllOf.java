/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.13
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CustomEzsignfoldersignerassociationActionableElementResponseAllOf {
  
  @SerializedName("bEzsignfoldersignerassociationHasactionableelementsCurrent")
  private Boolean bEzsignfoldersignerassociationHasactionableelementsCurrent = null;
  @SerializedName("bEzsignfoldersignerassociationHasactionableelementsFuture")
  private Boolean bEzsignfoldersignerassociationHasactionableelementsFuture = null;

  /**
   * Indicates if the Ezsignfoldersignerassociation has actionable elements in the current step
   **/
  @ApiModelProperty(required = true, value = "Indicates if the Ezsignfoldersignerassociation has actionable elements in the current step")
  public Boolean getBEzsignfoldersignerassociationHasactionableelementsCurrent() {
    return bEzsignfoldersignerassociationHasactionableelementsCurrent;
  }
  public void setBEzsignfoldersignerassociationHasactionableelementsCurrent(Boolean bEzsignfoldersignerassociationHasactionableelementsCurrent) {
    this.bEzsignfoldersignerassociationHasactionableelementsCurrent = bEzsignfoldersignerassociationHasactionableelementsCurrent;
  }

  /**
   * Indicates if the Ezsignfoldersignerassociation has actionable elements in a future step
   **/
  @ApiModelProperty(value = "Indicates if the Ezsignfoldersignerassociation has actionable elements in a future step")
  public Boolean getBEzsignfoldersignerassociationHasactionableelementsFuture() {
    return bEzsignfoldersignerassociationHasactionableelementsFuture;
  }
  public void setBEzsignfoldersignerassociationHasactionableelementsFuture(Boolean bEzsignfoldersignerassociationHasactionableelementsFuture) {
    this.bEzsignfoldersignerassociationHasactionableelementsFuture = bEzsignfoldersignerassociationHasactionableelementsFuture;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomEzsignfoldersignerassociationActionableElementResponseAllOf customEzsignfoldersignerassociationActionableElementResponseAllOf = (CustomEzsignfoldersignerassociationActionableElementResponseAllOf) o;
    return (this.bEzsignfoldersignerassociationHasactionableelementsCurrent == null ? customEzsignfoldersignerassociationActionableElementResponseAllOf.bEzsignfoldersignerassociationHasactionableelementsCurrent == null : this.bEzsignfoldersignerassociationHasactionableelementsCurrent.equals(customEzsignfoldersignerassociationActionableElementResponseAllOf.bEzsignfoldersignerassociationHasactionableelementsCurrent)) &&
        (this.bEzsignfoldersignerassociationHasactionableelementsFuture == null ? customEzsignfoldersignerassociationActionableElementResponseAllOf.bEzsignfoldersignerassociationHasactionableelementsFuture == null : this.bEzsignfoldersignerassociationHasactionableelementsFuture.equals(customEzsignfoldersignerassociationActionableElementResponseAllOf.bEzsignfoldersignerassociationHasactionableelementsFuture));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.bEzsignfoldersignerassociationHasactionableelementsCurrent == null ? 0: this.bEzsignfoldersignerassociationHasactionableelementsCurrent.hashCode());
    result = 31 * result + (this.bEzsignfoldersignerassociationHasactionableelementsFuture == null ? 0: this.bEzsignfoldersignerassociationHasactionableelementsFuture.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomEzsignfoldersignerassociationActionableElementResponseAllOf {\n");
    
    sb.append("  bEzsignfoldersignerassociationHasactionableelementsCurrent: ").append(bEzsignfoldersignerassociationHasactionableelementsCurrent).append("\n");
    sb.append("  bEzsignfoldersignerassociationHasactionableelementsFuture: ").append(bEzsignfoldersignerassociationHasactionableelementsFuture).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
