/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.FieldEEzsigntemplatepublicLimittype;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * A Ezsigntemplatepublic Object and children
 **/
@ApiModel(description = "A Ezsigntemplatepublic Object and children")
public class EzsigntemplatepublicRequestCompound {
  
  @SerializedName("pkiEzsigntemplatepublicID")
  private Integer pkiEzsigntemplatepublicID = null;
  @SerializedName("fkiEzsignfoldertypeID")
  private Integer fkiEzsignfoldertypeID = null;
  @SerializedName("fkiUserlogintypeID")
  private Integer fkiUserlogintypeID = null;
  @SerializedName("fkiEzsigntemplateID")
  private Integer fkiEzsigntemplateID = null;
  @SerializedName("fkiEzsigntemplatepackageID")
  private Integer fkiEzsigntemplatepackageID = null;
  @SerializedName("sEzsigntemplatepublicDescription")
  private String sEzsigntemplatepublicDescription = null;
  @SerializedName("bEzsigntemplatepublicIsactive")
  private Boolean bEzsigntemplatepublicIsactive = null;
  @SerializedName("tEzsigntemplatepublicNote")
  private String tEzsigntemplatepublicNote = null;
  @SerializedName("eEzsigntemplatepublicLimittype")
  private FieldEEzsigntemplatepublicLimittype eEzsigntemplatepublicLimittype = null;
  @SerializedName("iEzsigntemplatepublicLimit")
  private Integer iEzsigntemplatepublicLimit = null;

  /**
   * The unique ID of the Ezsigntemplatepublic
   * minimum: 0
   * maximum: 65535
   **/
  @ApiModelProperty(value = "The unique ID of the Ezsigntemplatepublic")
  public Integer getPkiEzsigntemplatepublicID() {
    return pkiEzsigntemplatepublicID;
  }
  public void setPkiEzsigntemplatepublicID(Integer pkiEzsigntemplatepublicID) {
    this.pkiEzsigntemplatepublicID = pkiEzsigntemplatepublicID;
  }

  /**
   * The unique ID of the Ezsignfoldertype.
   * minimum: 0
   * maximum: 65535
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Ezsignfoldertype.")
  public Integer getFkiEzsignfoldertypeID() {
    return fkiEzsignfoldertypeID;
  }
  public void setFkiEzsignfoldertypeID(Integer fkiEzsignfoldertypeID) {
    this.fkiEzsignfoldertypeID = fkiEzsignfoldertypeID;
  }

  /**
   * The unique ID of the Userlogintype  Valid values:  |Value|Description|Detail| |-|-|-| |1|**Email Only**|The Ezsignsigner will receive a secure link by email| |2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**| |3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer| |4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type| |5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**| |6|**Embedded**|The Ezsignsigner will only be able to sign in the embedded solution. No email will be sent for invitation to sign. **Additional fee applies**|   |7|**Embedded with phone or SMS**|The Ezsignsigner will only be able to sign in the embedded solution and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|   |8|**No validation**|The Ezsignsigner will not receive an email and won't have to validate his connection using 2 factor. **Additional fee applies**|      |9|**Sms only**|The Ezsignsigner will not receive an email but will will need to authenticate using SMS. **Additional fee applies**|     
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Userlogintype  Valid values:  |Value|Description|Detail| |-|-|-| |1|**Email Only**|The Ezsignsigner will receive a secure link by email| |2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**| |3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer| |4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type| |5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**| |6|**Embedded**|The Ezsignsigner will only be able to sign in the embedded solution. No email will be sent for invitation to sign. **Additional fee applies**|   |7|**Embedded with phone or SMS**|The Ezsignsigner will only be able to sign in the embedded solution and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|   |8|**No validation**|The Ezsignsigner will not receive an email and won't have to validate his connection using 2 factor. **Additional fee applies**|      |9|**Sms only**|The Ezsignsigner will not receive an email but will will need to authenticate using SMS. **Additional fee applies**|     ")
  public Integer getFkiUserlogintypeID() {
    return fkiUserlogintypeID;
  }
  public void setFkiUserlogintypeID(Integer fkiUserlogintypeID) {
    this.fkiUserlogintypeID = fkiUserlogintypeID;
  }

  /**
   * The unique ID of the Ezsigntemplate
   * minimum: 0
   **/
  @ApiModelProperty(value = "The unique ID of the Ezsigntemplate")
  public Integer getFkiEzsigntemplateID() {
    return fkiEzsigntemplateID;
  }
  public void setFkiEzsigntemplateID(Integer fkiEzsigntemplateID) {
    this.fkiEzsigntemplateID = fkiEzsigntemplateID;
  }

  /**
   * The unique ID of the Ezsigntemplatepackage
   * minimum: 0
   **/
  @ApiModelProperty(value = "The unique ID of the Ezsigntemplatepackage")
  public Integer getFkiEzsigntemplatepackageID() {
    return fkiEzsigntemplatepackageID;
  }
  public void setFkiEzsigntemplatepackageID(Integer fkiEzsigntemplatepackageID) {
    this.fkiEzsigntemplatepackageID = fkiEzsigntemplatepackageID;
  }

  /**
   * The description of the Ezsigntemplatepublic
   **/
  @ApiModelProperty(required = true, value = "The description of the Ezsigntemplatepublic")
  public String getSEzsigntemplatepublicDescription() {
    return sEzsigntemplatepublicDescription;
  }
  public void setSEzsigntemplatepublicDescription(String sEzsigntemplatepublicDescription) {
    this.sEzsigntemplatepublicDescription = sEzsigntemplatepublicDescription;
  }

  /**
   * Whether the ezsigntemplatepublic is active or not
   **/
  @ApiModelProperty(required = true, value = "Whether the ezsigntemplatepublic is active or not")
  public Boolean getBEzsigntemplatepublicIsactive() {
    return bEzsigntemplatepublicIsactive;
  }
  public void setBEzsigntemplatepublicIsactive(Boolean bEzsigntemplatepublicIsactive) {
    this.bEzsigntemplatepublicIsactive = bEzsigntemplatepublicIsactive;
  }

  /**
   * The note of the Ezsigntemplatepublic
   **/
  @ApiModelProperty(required = true, value = "The note of the Ezsigntemplatepublic")
  public String getTEzsigntemplatepublicNote() {
    return tEzsigntemplatepublicNote;
  }
  public void setTEzsigntemplatepublicNote(String tEzsigntemplatepublicNote) {
    this.tEzsigntemplatepublicNote = tEzsigntemplatepublicNote;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public FieldEEzsigntemplatepublicLimittype getEEzsigntemplatepublicLimittype() {
    return eEzsigntemplatepublicLimittype;
  }
  public void setEEzsigntemplatepublicLimittype(FieldEEzsigntemplatepublicLimittype eEzsigntemplatepublicLimittype) {
    this.eEzsigntemplatepublicLimittype = eEzsigntemplatepublicLimittype;
  }

  /**
   * The limit of the Ezsigntemplatepublic
   * minimum: 0
   * maximum: 65535
   **/
  @ApiModelProperty(required = true, value = "The limit of the Ezsigntemplatepublic")
  public Integer getIEzsigntemplatepublicLimit() {
    return iEzsigntemplatepublicLimit;
  }
  public void setIEzsigntemplatepublicLimit(Integer iEzsigntemplatepublicLimit) {
    this.iEzsigntemplatepublicLimit = iEzsigntemplatepublicLimit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigntemplatepublicRequestCompound ezsigntemplatepublicRequestCompound = (EzsigntemplatepublicRequestCompound) o;
    return (this.pkiEzsigntemplatepublicID == null ? ezsigntemplatepublicRequestCompound.pkiEzsigntemplatepublicID == null : this.pkiEzsigntemplatepublicID.equals(ezsigntemplatepublicRequestCompound.pkiEzsigntemplatepublicID)) &&
        (this.fkiEzsignfoldertypeID == null ? ezsigntemplatepublicRequestCompound.fkiEzsignfoldertypeID == null : this.fkiEzsignfoldertypeID.equals(ezsigntemplatepublicRequestCompound.fkiEzsignfoldertypeID)) &&
        (this.fkiUserlogintypeID == null ? ezsigntemplatepublicRequestCompound.fkiUserlogintypeID == null : this.fkiUserlogintypeID.equals(ezsigntemplatepublicRequestCompound.fkiUserlogintypeID)) &&
        (this.fkiEzsigntemplateID == null ? ezsigntemplatepublicRequestCompound.fkiEzsigntemplateID == null : this.fkiEzsigntemplateID.equals(ezsigntemplatepublicRequestCompound.fkiEzsigntemplateID)) &&
        (this.fkiEzsigntemplatepackageID == null ? ezsigntemplatepublicRequestCompound.fkiEzsigntemplatepackageID == null : this.fkiEzsigntemplatepackageID.equals(ezsigntemplatepublicRequestCompound.fkiEzsigntemplatepackageID)) &&
        (this.sEzsigntemplatepublicDescription == null ? ezsigntemplatepublicRequestCompound.sEzsigntemplatepublicDescription == null : this.sEzsigntemplatepublicDescription.equals(ezsigntemplatepublicRequestCompound.sEzsigntemplatepublicDescription)) &&
        (this.bEzsigntemplatepublicIsactive == null ? ezsigntemplatepublicRequestCompound.bEzsigntemplatepublicIsactive == null : this.bEzsigntemplatepublicIsactive.equals(ezsigntemplatepublicRequestCompound.bEzsigntemplatepublicIsactive)) &&
        (this.tEzsigntemplatepublicNote == null ? ezsigntemplatepublicRequestCompound.tEzsigntemplatepublicNote == null : this.tEzsigntemplatepublicNote.equals(ezsigntemplatepublicRequestCompound.tEzsigntemplatepublicNote)) &&
        (this.eEzsigntemplatepublicLimittype == null ? ezsigntemplatepublicRequestCompound.eEzsigntemplatepublicLimittype == null : this.eEzsigntemplatepublicLimittype.equals(ezsigntemplatepublicRequestCompound.eEzsigntemplatepublicLimittype)) &&
        (this.iEzsigntemplatepublicLimit == null ? ezsigntemplatepublicRequestCompound.iEzsigntemplatepublicLimit == null : this.iEzsigntemplatepublicLimit.equals(ezsigntemplatepublicRequestCompound.iEzsigntemplatepublicLimit));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.pkiEzsigntemplatepublicID == null ? 0: this.pkiEzsigntemplatepublicID.hashCode());
    result = 31 * result + (this.fkiEzsignfoldertypeID == null ? 0: this.fkiEzsignfoldertypeID.hashCode());
    result = 31 * result + (this.fkiUserlogintypeID == null ? 0: this.fkiUserlogintypeID.hashCode());
    result = 31 * result + (this.fkiEzsigntemplateID == null ? 0: this.fkiEzsigntemplateID.hashCode());
    result = 31 * result + (this.fkiEzsigntemplatepackageID == null ? 0: this.fkiEzsigntemplatepackageID.hashCode());
    result = 31 * result + (this.sEzsigntemplatepublicDescription == null ? 0: this.sEzsigntemplatepublicDescription.hashCode());
    result = 31 * result + (this.bEzsigntemplatepublicIsactive == null ? 0: this.bEzsigntemplatepublicIsactive.hashCode());
    result = 31 * result + (this.tEzsigntemplatepublicNote == null ? 0: this.tEzsigntemplatepublicNote.hashCode());
    result = 31 * result + (this.eEzsigntemplatepublicLimittype == null ? 0: this.eEzsigntemplatepublicLimittype.hashCode());
    result = 31 * result + (this.iEzsigntemplatepublicLimit == null ? 0: this.iEzsigntemplatepublicLimit.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigntemplatepublicRequestCompound {\n");
    
    sb.append("  pkiEzsigntemplatepublicID: ").append(pkiEzsigntemplatepublicID).append("\n");
    sb.append("  fkiEzsignfoldertypeID: ").append(fkiEzsignfoldertypeID).append("\n");
    sb.append("  fkiUserlogintypeID: ").append(fkiUserlogintypeID).append("\n");
    sb.append("  fkiEzsigntemplateID: ").append(fkiEzsigntemplateID).append("\n");
    sb.append("  fkiEzsigntemplatepackageID: ").append(fkiEzsigntemplatepackageID).append("\n");
    sb.append("  sEzsigntemplatepublicDescription: ").append(sEzsigntemplatepublicDescription).append("\n");
    sb.append("  bEzsigntemplatepublicIsactive: ").append(bEzsigntemplatepublicIsactive).append("\n");
    sb.append("  tEzsigntemplatepublicNote: ").append(tEzsigntemplatepublicNote).append("\n");
    sb.append("  eEzsigntemplatepublicLimittype: ").append(eEzsigntemplatepublicLimittype).append("\n");
    sb.append("  iEzsigntemplatepublicLimit: ").append(iEzsigntemplatepublicLimit).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
