/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * A Creditcardclient AutocompleteElement Response
 **/
@ApiModel(description = "A Creditcardclient AutocompleteElement Response")
public class CreditcardclientAutocompleteElementResponse {
  
  @SerializedName("pkiCreditcardclientID")
  private Integer pkiCreditcardclientID = null;
  @SerializedName("sCreditcardclientDescription")
  private String sCreditcardclientDescription = null;
  @SerializedName("bCreditcardclientIsactive")
  private Boolean bCreditcardclientIsactive = null;

  /**
   * The unique ID of the Creditcardclient
   * minimum: 0
   * maximum: 65535
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Creditcardclient")
  public Integer getPkiCreditcardclientID() {
    return pkiCreditcardclientID;
  }
  public void setPkiCreditcardclientID(Integer pkiCreditcardclientID) {
    this.pkiCreditcardclientID = pkiCreditcardclientID;
  }

  /**
   * The description of the Creditcardclient
   **/
  @ApiModelProperty(required = true, value = "The description of the Creditcardclient")
  public String getSCreditcardclientDescription() {
    return sCreditcardclientDescription;
  }
  public void setSCreditcardclientDescription(String sCreditcardclientDescription) {
    this.sCreditcardclientDescription = sCreditcardclientDescription;
  }

  /**
   * Whether the creditcardclient is active or not
   **/
  @ApiModelProperty(required = true, value = "Whether the creditcardclient is active or not")
  public Boolean getBCreditcardclientIsactive() {
    return bCreditcardclientIsactive;
  }
  public void setBCreditcardclientIsactive(Boolean bCreditcardclientIsactive) {
    this.bCreditcardclientIsactive = bCreditcardclientIsactive;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditcardclientAutocompleteElementResponse creditcardclientAutocompleteElementResponse = (CreditcardclientAutocompleteElementResponse) o;
    return (this.pkiCreditcardclientID == null ? creditcardclientAutocompleteElementResponse.pkiCreditcardclientID == null : this.pkiCreditcardclientID.equals(creditcardclientAutocompleteElementResponse.pkiCreditcardclientID)) &&
        (this.sCreditcardclientDescription == null ? creditcardclientAutocompleteElementResponse.sCreditcardclientDescription == null : this.sCreditcardclientDescription.equals(creditcardclientAutocompleteElementResponse.sCreditcardclientDescription)) &&
        (this.bCreditcardclientIsactive == null ? creditcardclientAutocompleteElementResponse.bCreditcardclientIsactive == null : this.bCreditcardclientIsactive.equals(creditcardclientAutocompleteElementResponse.bCreditcardclientIsactive));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.pkiCreditcardclientID == null ? 0: this.pkiCreditcardclientID.hashCode());
    result = 31 * result + (this.sCreditcardclientDescription == null ? 0: this.sCreditcardclientDescription.hashCode());
    result = 31 * result + (this.bCreditcardclientIsactive == null ? 0: this.bCreditcardclientIsactive.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditcardclientAutocompleteElementResponse {\n");
    
    sb.append("  pkiCreditcardclientID: ").append(pkiCreditcardclientID).append("\n");
    sb.append("  sCreditcardclientDescription: ").append(sCreditcardclientDescription).append("\n");
    sb.append("  bCreditcardclientIsactive: ").append(bCreditcardclientIsactive).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
