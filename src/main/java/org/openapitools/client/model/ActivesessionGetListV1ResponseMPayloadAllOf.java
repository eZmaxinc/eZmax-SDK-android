/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.ActivesessionListElement;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ActivesessionGetListV1ResponseMPayloadAllOf {
  
  @SerializedName("a_objActivesession")
  private List<ActivesessionListElement> aObjActivesession = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<ActivesessionListElement> getAObjActivesession() {
    return aObjActivesession;
  }
  public void setAObjActivesession(List<ActivesessionListElement> aObjActivesession) {
    this.aObjActivesession = aObjActivesession;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivesessionGetListV1ResponseMPayloadAllOf activesessionGetListV1ResponseMPayloadAllOf = (ActivesessionGetListV1ResponseMPayloadAllOf) o;
    return (this.aObjActivesession == null ? activesessionGetListV1ResponseMPayloadAllOf.aObjActivesession == null : this.aObjActivesession.equals(activesessionGetListV1ResponseMPayloadAllOf.aObjActivesession));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.aObjActivesession == null ? 0: this.aObjActivesession.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivesessionGetListV1ResponseMPayloadAllOf {\n");
    
    sb.append("  aObjActivesession: ").append(aObjActivesession).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
