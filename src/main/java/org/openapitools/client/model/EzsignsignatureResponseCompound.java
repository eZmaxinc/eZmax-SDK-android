/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.CustomContactNameResponse;
import org.openapitools.client.model.CustomCreditcardtransactionResponse;
import org.openapitools.client.model.EnumTextvalidation;
import org.openapitools.client.model.EzsignelementdependencyResponseCompound;
import org.openapitools.client.model.EzsignsignaturecustomdateResponseCompound;
import org.openapitools.client.model.FieldEEzsignsignatureAttachmentnamesource;
import org.openapitools.client.model.FieldEEzsignsignatureDependencyrequirement;
import org.openapitools.client.model.FieldEEzsignsignatureFont;
import org.openapitools.client.model.FieldEEzsignsignatureTooltipposition;
import org.openapitools.client.model.FieldEEzsignsignatureType;
import org.openapitools.client.model.SignatureResponseCompound;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * An Ezsignsignature Object and children to create a complete structure
 **/
@ApiModel(description = "An Ezsignsignature Object and children to create a complete structure")
public class EzsignsignatureResponseCompound {
  
  @SerializedName("pkiEzsignsignatureID")
  private Integer pkiEzsignsignatureID = null;
  @SerializedName("fkiEzsigndocumentID")
  private Integer fkiEzsigndocumentID = null;
  @SerializedName("fkiEzsignfoldersignerassociationID")
  private Integer fkiEzsignfoldersignerassociationID = null;
  @SerializedName("fkiEzsignsigningreasonID")
  private Integer fkiEzsignsigningreasonID = null;
  @SerializedName("sEzsignsigningreasonDescriptionX")
  private String sEzsignsigningreasonDescriptionX = null;
  @SerializedName("iEzsignpagePagenumber")
  private Integer iEzsignpagePagenumber = null;
  @SerializedName("iEzsignsignatureX")
  private Integer iEzsignsignatureX = null;
  @SerializedName("iEzsignsignatureY")
  private Integer iEzsignsignatureY = null;
  @SerializedName("iEzsignsignatureHeight")
  private Integer iEzsignsignatureHeight = null;
  @SerializedName("iEzsignsignatureWidth")
  private Integer iEzsignsignatureWidth = null;
  @SerializedName("iEzsignsignatureStep")
  private Integer iEzsignsignatureStep = null;
  @SerializedName("iEzsignsignatureStepadjusted")
  private Integer iEzsignsignatureStepadjusted = null;
  @SerializedName("eEzsignsignatureType")
  private FieldEEzsignsignatureType eEzsignsignatureType = null;
  @SerializedName("tEzsignsignatureTooltip")
  private String tEzsignsignatureTooltip = null;
  @SerializedName("eEzsignsignatureTooltipposition")
  private FieldEEzsignsignatureTooltipposition eEzsignsignatureTooltipposition = null;
  @SerializedName("eEzsignsignatureFont")
  private FieldEEzsignsignatureFont eEzsignsignatureFont = null;
  @SerializedName("iEzsignsignatureValidationstep")
  private Integer iEzsignsignatureValidationstep = null;
  @SerializedName("sEzsignsignatureAttachmentdescription")
  private String sEzsignsignatureAttachmentdescription = null;
  @SerializedName("eEzsignsignatureAttachmentnamesource")
  private FieldEEzsignsignatureAttachmentnamesource eEzsignsignatureAttachmentnamesource = null;
  @SerializedName("bEzsignsignatureRequired")
  private Boolean bEzsignsignatureRequired = null;
  @SerializedName("fkiEzsignfoldersignerassociationIDValidation")
  private Integer fkiEzsignfoldersignerassociationIDValidation = null;
  @SerializedName("dtEzsignsignatureDate")
  private String dtEzsignsignatureDate = null;
  @SerializedName("iEzsignsignatureattachmentCount")
  private Integer iEzsignsignatureattachmentCount = null;
  @SerializedName("sEzsignsignatureDescription")
  private String sEzsignsignatureDescription = null;
  @SerializedName("iEzsignsignatureMaxlength")
  private Integer iEzsignsignatureMaxlength = null;
  @SerializedName("eEzsignsignatureTextvalidation")
  private EnumTextvalidation eEzsignsignatureTextvalidation = null;
  @SerializedName("eEzsignsignatureDependencyrequirement")
  private FieldEEzsignsignatureDependencyrequirement eEzsignsignatureDependencyrequirement = null;
  @SerializedName("sEzsignsignatureRegexp")
  private String sEzsignsignatureRegexp = null;
  @SerializedName("objContactName")
  private CustomContactNameResponse objContactName = null;
  @SerializedName("objContactNameDelegation")
  private CustomContactNameResponse objContactNameDelegation = null;
  @SerializedName("objSignature")
  private SignatureResponseCompound objSignature = null;
  @SerializedName("bEzsignsignatureCustomdate")
  private Boolean bEzsignsignatureCustomdate = null;
  @SerializedName("a_objEzsignsignaturecustomdate")
  private List<EzsignsignaturecustomdateResponseCompound> aObjEzsignsignaturecustomdate = null;
  @SerializedName("objCreditcardtransaction")
  private CustomCreditcardtransactionResponse objCreditcardtransaction = null;
  @SerializedName("a_objEzsignelementdependency")
  private List<EzsignelementdependencyResponseCompound> aObjEzsignelementdependency = null;

  /**
   * The unique ID of the Ezsignsignature
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Ezsignsignature")
  public Integer getPkiEzsignsignatureID() {
    return pkiEzsignsignatureID;
  }
  public void setPkiEzsignsignatureID(Integer pkiEzsignsignatureID) {
    this.pkiEzsignsignatureID = pkiEzsignsignatureID;
  }

  /**
   * The unique ID of the Ezsigndocument
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Ezsigndocument")
  public Integer getFkiEzsigndocumentID() {
    return fkiEzsigndocumentID;
  }
  public void setFkiEzsigndocumentID(Integer fkiEzsigndocumentID) {
    this.fkiEzsigndocumentID = fkiEzsigndocumentID;
  }

  /**
   * The unique ID of the Ezsignfoldersignerassociation
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Ezsignfoldersignerassociation")
  public Integer getFkiEzsignfoldersignerassociationID() {
    return fkiEzsignfoldersignerassociationID;
  }
  public void setFkiEzsignfoldersignerassociationID(Integer fkiEzsignfoldersignerassociationID) {
    this.fkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID;
  }

  /**
   * The unique ID of the Ezsignsigningreason
   * minimum: 0
   * maximum: 255
   **/
  @ApiModelProperty(value = "The unique ID of the Ezsignsigningreason")
  public Integer getFkiEzsignsigningreasonID() {
    return fkiEzsignsigningreasonID;
  }
  public void setFkiEzsignsigningreasonID(Integer fkiEzsignsigningreasonID) {
    this.fkiEzsignsigningreasonID = fkiEzsignsigningreasonID;
  }

  /**
   * The description of the Ezsignsigningreason in the language of the requester
   **/
  @ApiModelProperty(value = "The description of the Ezsignsigningreason in the language of the requester")
  public String getSEzsignsigningreasonDescriptionX() {
    return sEzsignsigningreasonDescriptionX;
  }
  public void setSEzsignsigningreasonDescriptionX(String sEzsignsigningreasonDescriptionX) {
    this.sEzsignsigningreasonDescriptionX = sEzsignsigningreasonDescriptionX;
  }

  /**
   * The page number in the Ezsigndocument
   * minimum: 1
   **/
  @ApiModelProperty(required = true, value = "The page number in the Ezsigndocument")
  public Integer getIEzsignpagePagenumber() {
    return iEzsignpagePagenumber;
  }
  public void setIEzsignpagePagenumber(Integer iEzsignpagePagenumber) {
    this.iEzsignpagePagenumber = iEzsignpagePagenumber;
  }

  /**
   * The X coordinate (Horizontal) where to put the Ezsignsignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignature 2 inches from the left border of the page, you would use \"200\" for the X coordinate.
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The X coordinate (Horizontal) where to put the Ezsignsignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignature 2 inches from the left border of the page, you would use \"200\" for the X coordinate.")
  public Integer getIEzsignsignatureX() {
    return iEzsignsignatureX;
  }
  public void setIEzsignsignatureX(Integer iEzsignsignatureX) {
    this.iEzsignsignatureX = iEzsignsignatureX;
  }

  /**
   * The Y coordinate (Vertical) where to put the Ezsignsignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignature 3 inches from the top border of the page, you would use \"300\" for the Y coordinate.
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The Y coordinate (Vertical) where to put the Ezsignsignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignature 3 inches from the top border of the page, you would use \"300\" for the Y coordinate.")
  public Integer getIEzsignsignatureY() {
    return iEzsignsignatureY;
  }
  public void setIEzsignsignatureY(Integer iEzsignsignatureY) {
    this.iEzsignsignatureY = iEzsignsignatureY;
  }

  /**
   * The height of the Ezsignsignature.  Size is calculated at 100dpi (dot per inch). So for example, if you want the Ezsignsignature to have an height of 2 inches, you would use \"200\" for the iEzsignsignatureHeight.
   * minimum: 0
   **/
  @ApiModelProperty(value = "The height of the Ezsignsignature.  Size is calculated at 100dpi (dot per inch). So for example, if you want the Ezsignsignature to have an height of 2 inches, you would use \"200\" for the iEzsignsignatureHeight.")
  public Integer getIEzsignsignatureHeight() {
    return iEzsignsignatureHeight;
  }
  public void setIEzsignsignatureHeight(Integer iEzsignsignatureHeight) {
    this.iEzsignsignatureHeight = iEzsignsignatureHeight;
  }

  /**
   * The width of the Ezsignsignature.  Size is calculated at 100dpi (dot per inch). So for example, if you want the Ezsignsignature to have a width of 2 inches, you would use \"200\" for the iEzsignsignatureWidth.
   * minimum: 0
   **/
  @ApiModelProperty(value = "The width of the Ezsignsignature.  Size is calculated at 100dpi (dot per inch). So for example, if you want the Ezsignsignature to have a width of 2 inches, you would use \"200\" for the iEzsignsignatureWidth.")
  public Integer getIEzsignsignatureWidth() {
    return iEzsignsignatureWidth;
  }
  public void setIEzsignsignatureWidth(Integer iEzsignsignatureWidth) {
    this.iEzsignsignatureWidth = iEzsignsignatureWidth;
  }

  /**
   * The step when the Ezsignsigner will be invited to sign
   **/
  @ApiModelProperty(required = true, value = "The step when the Ezsignsigner will be invited to sign")
  public Integer getIEzsignsignatureStep() {
    return iEzsignsignatureStep;
  }
  public void setIEzsignsignatureStep(Integer iEzsignsignatureStep) {
    this.iEzsignsignatureStep = iEzsignsignatureStep;
  }

  /**
   * The step when the Ezsignsigner will be invited to sign
   **/
  @ApiModelProperty(value = "The step when the Ezsignsigner will be invited to sign")
  public Integer getIEzsignsignatureStepadjusted() {
    return iEzsignsignatureStepadjusted;
  }
  public void setIEzsignsignatureStepadjusted(Integer iEzsignsignatureStepadjusted) {
    this.iEzsignsignatureStepadjusted = iEzsignsignatureStepadjusted;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public FieldEEzsignsignatureType getEEzsignsignatureType() {
    return eEzsignsignatureType;
  }
  public void setEEzsignsignatureType(FieldEEzsignsignatureType eEzsignsignatureType) {
    this.eEzsignsignatureType = eEzsignsignatureType;
  }

  /**
   * A tooltip that will be presented to Ezsignsigner about the Ezsignsignature
   **/
  @ApiModelProperty(value = "A tooltip that will be presented to Ezsignsigner about the Ezsignsignature")
  public String getTEzsignsignatureTooltip() {
    return tEzsignsignatureTooltip;
  }
  public void setTEzsignsignatureTooltip(String tEzsignsignatureTooltip) {
    this.tEzsignsignatureTooltip = tEzsignsignatureTooltip;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FieldEEzsignsignatureTooltipposition getEEzsignsignatureTooltipposition() {
    return eEzsignsignatureTooltipposition;
  }
  public void setEEzsignsignatureTooltipposition(FieldEEzsignsignatureTooltipposition eEzsignsignatureTooltipposition) {
    this.eEzsignsignatureTooltipposition = eEzsignsignatureTooltipposition;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FieldEEzsignsignatureFont getEEzsignsignatureFont() {
    return eEzsignsignatureFont;
  }
  public void setEEzsignsignatureFont(FieldEEzsignsignatureFont eEzsignsignatureFont) {
    this.eEzsignsignatureFont = eEzsignsignatureFont;
  }

  /**
   * The step when the Ezsignsigner will be invited to validate the Ezsignsignature of eEzsignsignatureType Attachments
   **/
  @ApiModelProperty(value = "The step when the Ezsignsigner will be invited to validate the Ezsignsignature of eEzsignsignatureType Attachments")
  public Integer getIEzsignsignatureValidationstep() {
    return iEzsignsignatureValidationstep;
  }
  public void setIEzsignsignatureValidationstep(Integer iEzsignsignatureValidationstep) {
    this.iEzsignsignatureValidationstep = iEzsignsignatureValidationstep;
  }

  /**
   * The description attached to the attachment name added in Ezsignsignature of eEzsignsignatureType Attachments
   **/
  @ApiModelProperty(value = "The description attached to the attachment name added in Ezsignsignature of eEzsignsignatureType Attachments")
  public String getSEzsignsignatureAttachmentdescription() {
    return sEzsignsignatureAttachmentdescription;
  }
  public void setSEzsignsignatureAttachmentdescription(String sEzsignsignatureAttachmentdescription) {
    this.sEzsignsignatureAttachmentdescription = sEzsignsignatureAttachmentdescription;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FieldEEzsignsignatureAttachmentnamesource getEEzsignsignatureAttachmentnamesource() {
    return eEzsignsignatureAttachmentnamesource;
  }
  public void setEEzsignsignatureAttachmentnamesource(FieldEEzsignsignatureAttachmentnamesource eEzsignsignatureAttachmentnamesource) {
    this.eEzsignsignatureAttachmentnamesource = eEzsignsignatureAttachmentnamesource;
  }

  /**
   * Whether the Ezsignsignature is required or not. This field is relevant only with Ezsignsignature with eEzsignsignatureType = Attachments.
   **/
  @ApiModelProperty(value = "Whether the Ezsignsignature is required or not. This field is relevant only with Ezsignsignature with eEzsignsignatureType = Attachments.")
  public Boolean getBEzsignsignatureRequired() {
    return bEzsignsignatureRequired;
  }
  public void setBEzsignsignatureRequired(Boolean bEzsignsignatureRequired) {
    this.bEzsignsignatureRequired = bEzsignsignatureRequired;
  }

  /**
   * The unique ID of the Ezsignfoldersignerassociation
   * minimum: 0
   **/
  @ApiModelProperty(value = "The unique ID of the Ezsignfoldersignerassociation")
  public Integer getFkiEzsignfoldersignerassociationIDValidation() {
    return fkiEzsignfoldersignerassociationIDValidation;
  }
  public void setFkiEzsignfoldersignerassociationIDValidation(Integer fkiEzsignfoldersignerassociationIDValidation) {
    this.fkiEzsignfoldersignerassociationIDValidation = fkiEzsignfoldersignerassociationIDValidation;
  }

  /**
   * The date the Ezsignsignature was signed
   **/
  @ApiModelProperty(value = "The date the Ezsignsignature was signed")
  public String getDtEzsignsignatureDate() {
    return dtEzsignsignatureDate;
  }
  public void setDtEzsignsignatureDate(String dtEzsignsignatureDate) {
    this.dtEzsignsignatureDate = dtEzsignsignatureDate;
  }

  /**
   * The count of Ezsignsignatureattachment
   **/
  @ApiModelProperty(value = "The count of Ezsignsignatureattachment")
  public Integer getIEzsignsignatureattachmentCount() {
    return iEzsignsignatureattachmentCount;
  }
  public void setIEzsignsignatureattachmentCount(Integer iEzsignsignatureattachmentCount) {
    this.iEzsignsignatureattachmentCount = iEzsignsignatureattachmentCount;
  }

  /**
   * The value entered while signing Ezsignsignature of eEzsignsignatureType **City**, **FieldText** and **FieldTextarea**
   **/
  @ApiModelProperty(value = "The value entered while signing Ezsignsignature of eEzsignsignatureType **City**, **FieldText** and **FieldTextarea**")
  public String getSEzsignsignatureDescription() {
    return sEzsignsignatureDescription;
  }
  public void setSEzsignsignatureDescription(String sEzsignsignatureDescription) {
    this.sEzsignsignatureDescription = sEzsignsignatureDescription;
  }

  /**
   * The maximum length for the value in the Ezsignsignature  This can only be set if eEzsignsignatureType is **FieldText** or **FieldTextarea**
   * minimum: 0
   * maximum: 65535
   **/
  @ApiModelProperty(value = "The maximum length for the value in the Ezsignsignature  This can only be set if eEzsignsignatureType is **FieldText** or **FieldTextarea**")
  public Integer getIEzsignsignatureMaxlength() {
    return iEzsignsignatureMaxlength;
  }
  public void setIEzsignsignatureMaxlength(Integer iEzsignsignatureMaxlength) {
    this.iEzsignsignatureMaxlength = iEzsignsignatureMaxlength;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public EnumTextvalidation getEEzsignsignatureTextvalidation() {
    return eEzsignsignatureTextvalidation;
  }
  public void setEEzsignsignatureTextvalidation(EnumTextvalidation eEzsignsignatureTextvalidation) {
    this.eEzsignsignatureTextvalidation = eEzsignsignatureTextvalidation;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FieldEEzsignsignatureDependencyrequirement getEEzsignsignatureDependencyrequirement() {
    return eEzsignsignatureDependencyrequirement;
  }
  public void setEEzsignsignatureDependencyrequirement(FieldEEzsignsignatureDependencyrequirement eEzsignsignatureDependencyrequirement) {
    this.eEzsignsignatureDependencyrequirement = eEzsignsignatureDependencyrequirement;
  }

  /**
   * A regular expression to indicate what values are acceptable for the Ezsignsignature.  This can only be set if eEzsignsignatureType is **FieldText** or **FieldTextarea** and eEzsignsignatureTextvalidation is **Custom**
   **/
  @ApiModelProperty(value = "A regular expression to indicate what values are acceptable for the Ezsignsignature.  This can only be set if eEzsignsignatureType is **FieldText** or **FieldTextarea** and eEzsignsignatureTextvalidation is **Custom**")
  public String getSEzsignsignatureRegexp() {
    return sEzsignsignatureRegexp;
  }
  public void setSEzsignsignatureRegexp(String sEzsignsignatureRegexp) {
    this.sEzsignsignatureRegexp = sEzsignsignatureRegexp;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public CustomContactNameResponse getObjContactName() {
    return objContactName;
  }
  public void setObjContactName(CustomContactNameResponse objContactName) {
    this.objContactName = objContactName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CustomContactNameResponse getObjContactNameDelegation() {
    return objContactNameDelegation;
  }
  public void setObjContactNameDelegation(CustomContactNameResponse objContactNameDelegation) {
    this.objContactNameDelegation = objContactNameDelegation;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public SignatureResponseCompound getObjSignature() {
    return objSignature;
  }
  public void setObjSignature(SignatureResponseCompound objSignature) {
    this.objSignature = objSignature;
  }

  /**
   * Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)
   **/
  @ApiModelProperty(value = "Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)")
  public Boolean getBEzsignsignatureCustomdate() {
    return bEzsignsignatureCustomdate;
  }
  public void setBEzsignsignatureCustomdate(Boolean bEzsignsignatureCustomdate) {
    this.bEzsignsignatureCustomdate = bEzsignsignatureCustomdate;
  }

  /**
   * An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.
   **/
  @ApiModelProperty(value = "An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.")
  public List<EzsignsignaturecustomdateResponseCompound> getAObjEzsignsignaturecustomdate() {
    return aObjEzsignsignaturecustomdate;
  }
  public void setAObjEzsignsignaturecustomdate(List<EzsignsignaturecustomdateResponseCompound> aObjEzsignsignaturecustomdate) {
    this.aObjEzsignsignaturecustomdate = aObjEzsignsignaturecustomdate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CustomCreditcardtransactionResponse getObjCreditcardtransaction() {
    return objCreditcardtransaction;
  }
  public void setObjCreditcardtransaction(CustomCreditcardtransactionResponse objCreditcardtransaction) {
    this.objCreditcardtransaction = objCreditcardtransaction;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<EzsignelementdependencyResponseCompound> getAObjEzsignelementdependency() {
    return aObjEzsignelementdependency;
  }
  public void setAObjEzsignelementdependency(List<EzsignelementdependencyResponseCompound> aObjEzsignelementdependency) {
    this.aObjEzsignelementdependency = aObjEzsignelementdependency;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignsignatureResponseCompound ezsignsignatureResponseCompound = (EzsignsignatureResponseCompound) o;
    return (this.pkiEzsignsignatureID == null ? ezsignsignatureResponseCompound.pkiEzsignsignatureID == null : this.pkiEzsignsignatureID.equals(ezsignsignatureResponseCompound.pkiEzsignsignatureID)) &&
        (this.fkiEzsigndocumentID == null ? ezsignsignatureResponseCompound.fkiEzsigndocumentID == null : this.fkiEzsigndocumentID.equals(ezsignsignatureResponseCompound.fkiEzsigndocumentID)) &&
        (this.fkiEzsignfoldersignerassociationID == null ? ezsignsignatureResponseCompound.fkiEzsignfoldersignerassociationID == null : this.fkiEzsignfoldersignerassociationID.equals(ezsignsignatureResponseCompound.fkiEzsignfoldersignerassociationID)) &&
        (this.fkiEzsignsigningreasonID == null ? ezsignsignatureResponseCompound.fkiEzsignsigningreasonID == null : this.fkiEzsignsigningreasonID.equals(ezsignsignatureResponseCompound.fkiEzsignsigningreasonID)) &&
        (this.sEzsignsigningreasonDescriptionX == null ? ezsignsignatureResponseCompound.sEzsignsigningreasonDescriptionX == null : this.sEzsignsigningreasonDescriptionX.equals(ezsignsignatureResponseCompound.sEzsignsigningreasonDescriptionX)) &&
        (this.iEzsignpagePagenumber == null ? ezsignsignatureResponseCompound.iEzsignpagePagenumber == null : this.iEzsignpagePagenumber.equals(ezsignsignatureResponseCompound.iEzsignpagePagenumber)) &&
        (this.iEzsignsignatureX == null ? ezsignsignatureResponseCompound.iEzsignsignatureX == null : this.iEzsignsignatureX.equals(ezsignsignatureResponseCompound.iEzsignsignatureX)) &&
        (this.iEzsignsignatureY == null ? ezsignsignatureResponseCompound.iEzsignsignatureY == null : this.iEzsignsignatureY.equals(ezsignsignatureResponseCompound.iEzsignsignatureY)) &&
        (this.iEzsignsignatureHeight == null ? ezsignsignatureResponseCompound.iEzsignsignatureHeight == null : this.iEzsignsignatureHeight.equals(ezsignsignatureResponseCompound.iEzsignsignatureHeight)) &&
        (this.iEzsignsignatureWidth == null ? ezsignsignatureResponseCompound.iEzsignsignatureWidth == null : this.iEzsignsignatureWidth.equals(ezsignsignatureResponseCompound.iEzsignsignatureWidth)) &&
        (this.iEzsignsignatureStep == null ? ezsignsignatureResponseCompound.iEzsignsignatureStep == null : this.iEzsignsignatureStep.equals(ezsignsignatureResponseCompound.iEzsignsignatureStep)) &&
        (this.iEzsignsignatureStepadjusted == null ? ezsignsignatureResponseCompound.iEzsignsignatureStepadjusted == null : this.iEzsignsignatureStepadjusted.equals(ezsignsignatureResponseCompound.iEzsignsignatureStepadjusted)) &&
        (this.eEzsignsignatureType == null ? ezsignsignatureResponseCompound.eEzsignsignatureType == null : this.eEzsignsignatureType.equals(ezsignsignatureResponseCompound.eEzsignsignatureType)) &&
        (this.tEzsignsignatureTooltip == null ? ezsignsignatureResponseCompound.tEzsignsignatureTooltip == null : this.tEzsignsignatureTooltip.equals(ezsignsignatureResponseCompound.tEzsignsignatureTooltip)) &&
        (this.eEzsignsignatureTooltipposition == null ? ezsignsignatureResponseCompound.eEzsignsignatureTooltipposition == null : this.eEzsignsignatureTooltipposition.equals(ezsignsignatureResponseCompound.eEzsignsignatureTooltipposition)) &&
        (this.eEzsignsignatureFont == null ? ezsignsignatureResponseCompound.eEzsignsignatureFont == null : this.eEzsignsignatureFont.equals(ezsignsignatureResponseCompound.eEzsignsignatureFont)) &&
        (this.iEzsignsignatureValidationstep == null ? ezsignsignatureResponseCompound.iEzsignsignatureValidationstep == null : this.iEzsignsignatureValidationstep.equals(ezsignsignatureResponseCompound.iEzsignsignatureValidationstep)) &&
        (this.sEzsignsignatureAttachmentdescription == null ? ezsignsignatureResponseCompound.sEzsignsignatureAttachmentdescription == null : this.sEzsignsignatureAttachmentdescription.equals(ezsignsignatureResponseCompound.sEzsignsignatureAttachmentdescription)) &&
        (this.eEzsignsignatureAttachmentnamesource == null ? ezsignsignatureResponseCompound.eEzsignsignatureAttachmentnamesource == null : this.eEzsignsignatureAttachmentnamesource.equals(ezsignsignatureResponseCompound.eEzsignsignatureAttachmentnamesource)) &&
        (this.bEzsignsignatureRequired == null ? ezsignsignatureResponseCompound.bEzsignsignatureRequired == null : this.bEzsignsignatureRequired.equals(ezsignsignatureResponseCompound.bEzsignsignatureRequired)) &&
        (this.fkiEzsignfoldersignerassociationIDValidation == null ? ezsignsignatureResponseCompound.fkiEzsignfoldersignerassociationIDValidation == null : this.fkiEzsignfoldersignerassociationIDValidation.equals(ezsignsignatureResponseCompound.fkiEzsignfoldersignerassociationIDValidation)) &&
        (this.dtEzsignsignatureDate == null ? ezsignsignatureResponseCompound.dtEzsignsignatureDate == null : this.dtEzsignsignatureDate.equals(ezsignsignatureResponseCompound.dtEzsignsignatureDate)) &&
        (this.iEzsignsignatureattachmentCount == null ? ezsignsignatureResponseCompound.iEzsignsignatureattachmentCount == null : this.iEzsignsignatureattachmentCount.equals(ezsignsignatureResponseCompound.iEzsignsignatureattachmentCount)) &&
        (this.sEzsignsignatureDescription == null ? ezsignsignatureResponseCompound.sEzsignsignatureDescription == null : this.sEzsignsignatureDescription.equals(ezsignsignatureResponseCompound.sEzsignsignatureDescription)) &&
        (this.iEzsignsignatureMaxlength == null ? ezsignsignatureResponseCompound.iEzsignsignatureMaxlength == null : this.iEzsignsignatureMaxlength.equals(ezsignsignatureResponseCompound.iEzsignsignatureMaxlength)) &&
        (this.eEzsignsignatureTextvalidation == null ? ezsignsignatureResponseCompound.eEzsignsignatureTextvalidation == null : this.eEzsignsignatureTextvalidation.equals(ezsignsignatureResponseCompound.eEzsignsignatureTextvalidation)) &&
        (this.eEzsignsignatureDependencyrequirement == null ? ezsignsignatureResponseCompound.eEzsignsignatureDependencyrequirement == null : this.eEzsignsignatureDependencyrequirement.equals(ezsignsignatureResponseCompound.eEzsignsignatureDependencyrequirement)) &&
        (this.sEzsignsignatureRegexp == null ? ezsignsignatureResponseCompound.sEzsignsignatureRegexp == null : this.sEzsignsignatureRegexp.equals(ezsignsignatureResponseCompound.sEzsignsignatureRegexp)) &&
        (this.objContactName == null ? ezsignsignatureResponseCompound.objContactName == null : this.objContactName.equals(ezsignsignatureResponseCompound.objContactName)) &&
        (this.objContactNameDelegation == null ? ezsignsignatureResponseCompound.objContactNameDelegation == null : this.objContactNameDelegation.equals(ezsignsignatureResponseCompound.objContactNameDelegation)) &&
        (this.objSignature == null ? ezsignsignatureResponseCompound.objSignature == null : this.objSignature.equals(ezsignsignatureResponseCompound.objSignature)) &&
        (this.bEzsignsignatureCustomdate == null ? ezsignsignatureResponseCompound.bEzsignsignatureCustomdate == null : this.bEzsignsignatureCustomdate.equals(ezsignsignatureResponseCompound.bEzsignsignatureCustomdate)) &&
        (this.aObjEzsignsignaturecustomdate == null ? ezsignsignatureResponseCompound.aObjEzsignsignaturecustomdate == null : this.aObjEzsignsignaturecustomdate.equals(ezsignsignatureResponseCompound.aObjEzsignsignaturecustomdate)) &&
        (this.objCreditcardtransaction == null ? ezsignsignatureResponseCompound.objCreditcardtransaction == null : this.objCreditcardtransaction.equals(ezsignsignatureResponseCompound.objCreditcardtransaction)) &&
        (this.aObjEzsignelementdependency == null ? ezsignsignatureResponseCompound.aObjEzsignelementdependency == null : this.aObjEzsignelementdependency.equals(ezsignsignatureResponseCompound.aObjEzsignelementdependency));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.pkiEzsignsignatureID == null ? 0: this.pkiEzsignsignatureID.hashCode());
    result = 31 * result + (this.fkiEzsigndocumentID == null ? 0: this.fkiEzsigndocumentID.hashCode());
    result = 31 * result + (this.fkiEzsignfoldersignerassociationID == null ? 0: this.fkiEzsignfoldersignerassociationID.hashCode());
    result = 31 * result + (this.fkiEzsignsigningreasonID == null ? 0: this.fkiEzsignsigningreasonID.hashCode());
    result = 31 * result + (this.sEzsignsigningreasonDescriptionX == null ? 0: this.sEzsignsigningreasonDescriptionX.hashCode());
    result = 31 * result + (this.iEzsignpagePagenumber == null ? 0: this.iEzsignpagePagenumber.hashCode());
    result = 31 * result + (this.iEzsignsignatureX == null ? 0: this.iEzsignsignatureX.hashCode());
    result = 31 * result + (this.iEzsignsignatureY == null ? 0: this.iEzsignsignatureY.hashCode());
    result = 31 * result + (this.iEzsignsignatureHeight == null ? 0: this.iEzsignsignatureHeight.hashCode());
    result = 31 * result + (this.iEzsignsignatureWidth == null ? 0: this.iEzsignsignatureWidth.hashCode());
    result = 31 * result + (this.iEzsignsignatureStep == null ? 0: this.iEzsignsignatureStep.hashCode());
    result = 31 * result + (this.iEzsignsignatureStepadjusted == null ? 0: this.iEzsignsignatureStepadjusted.hashCode());
    result = 31 * result + (this.eEzsignsignatureType == null ? 0: this.eEzsignsignatureType.hashCode());
    result = 31 * result + (this.tEzsignsignatureTooltip == null ? 0: this.tEzsignsignatureTooltip.hashCode());
    result = 31 * result + (this.eEzsignsignatureTooltipposition == null ? 0: this.eEzsignsignatureTooltipposition.hashCode());
    result = 31 * result + (this.eEzsignsignatureFont == null ? 0: this.eEzsignsignatureFont.hashCode());
    result = 31 * result + (this.iEzsignsignatureValidationstep == null ? 0: this.iEzsignsignatureValidationstep.hashCode());
    result = 31 * result + (this.sEzsignsignatureAttachmentdescription == null ? 0: this.sEzsignsignatureAttachmentdescription.hashCode());
    result = 31 * result + (this.eEzsignsignatureAttachmentnamesource == null ? 0: this.eEzsignsignatureAttachmentnamesource.hashCode());
    result = 31 * result + (this.bEzsignsignatureRequired == null ? 0: this.bEzsignsignatureRequired.hashCode());
    result = 31 * result + (this.fkiEzsignfoldersignerassociationIDValidation == null ? 0: this.fkiEzsignfoldersignerassociationIDValidation.hashCode());
    result = 31 * result + (this.dtEzsignsignatureDate == null ? 0: this.dtEzsignsignatureDate.hashCode());
    result = 31 * result + (this.iEzsignsignatureattachmentCount == null ? 0: this.iEzsignsignatureattachmentCount.hashCode());
    result = 31 * result + (this.sEzsignsignatureDescription == null ? 0: this.sEzsignsignatureDescription.hashCode());
    result = 31 * result + (this.iEzsignsignatureMaxlength == null ? 0: this.iEzsignsignatureMaxlength.hashCode());
    result = 31 * result + (this.eEzsignsignatureTextvalidation == null ? 0: this.eEzsignsignatureTextvalidation.hashCode());
    result = 31 * result + (this.eEzsignsignatureDependencyrequirement == null ? 0: this.eEzsignsignatureDependencyrequirement.hashCode());
    result = 31 * result + (this.sEzsignsignatureRegexp == null ? 0: this.sEzsignsignatureRegexp.hashCode());
    result = 31 * result + (this.objContactName == null ? 0: this.objContactName.hashCode());
    result = 31 * result + (this.objContactNameDelegation == null ? 0: this.objContactNameDelegation.hashCode());
    result = 31 * result + (this.objSignature == null ? 0: this.objSignature.hashCode());
    result = 31 * result + (this.bEzsignsignatureCustomdate == null ? 0: this.bEzsignsignatureCustomdate.hashCode());
    result = 31 * result + (this.aObjEzsignsignaturecustomdate == null ? 0: this.aObjEzsignsignaturecustomdate.hashCode());
    result = 31 * result + (this.objCreditcardtransaction == null ? 0: this.objCreditcardtransaction.hashCode());
    result = 31 * result + (this.aObjEzsignelementdependency == null ? 0: this.aObjEzsignelementdependency.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignsignatureResponseCompound {\n");
    
    sb.append("  pkiEzsignsignatureID: ").append(pkiEzsignsignatureID).append("\n");
    sb.append("  fkiEzsigndocumentID: ").append(fkiEzsigndocumentID).append("\n");
    sb.append("  fkiEzsignfoldersignerassociationID: ").append(fkiEzsignfoldersignerassociationID).append("\n");
    sb.append("  fkiEzsignsigningreasonID: ").append(fkiEzsignsigningreasonID).append("\n");
    sb.append("  sEzsignsigningreasonDescriptionX: ").append(sEzsignsigningreasonDescriptionX).append("\n");
    sb.append("  iEzsignpagePagenumber: ").append(iEzsignpagePagenumber).append("\n");
    sb.append("  iEzsignsignatureX: ").append(iEzsignsignatureX).append("\n");
    sb.append("  iEzsignsignatureY: ").append(iEzsignsignatureY).append("\n");
    sb.append("  iEzsignsignatureHeight: ").append(iEzsignsignatureHeight).append("\n");
    sb.append("  iEzsignsignatureWidth: ").append(iEzsignsignatureWidth).append("\n");
    sb.append("  iEzsignsignatureStep: ").append(iEzsignsignatureStep).append("\n");
    sb.append("  iEzsignsignatureStepadjusted: ").append(iEzsignsignatureStepadjusted).append("\n");
    sb.append("  eEzsignsignatureType: ").append(eEzsignsignatureType).append("\n");
    sb.append("  tEzsignsignatureTooltip: ").append(tEzsignsignatureTooltip).append("\n");
    sb.append("  eEzsignsignatureTooltipposition: ").append(eEzsignsignatureTooltipposition).append("\n");
    sb.append("  eEzsignsignatureFont: ").append(eEzsignsignatureFont).append("\n");
    sb.append("  iEzsignsignatureValidationstep: ").append(iEzsignsignatureValidationstep).append("\n");
    sb.append("  sEzsignsignatureAttachmentdescription: ").append(sEzsignsignatureAttachmentdescription).append("\n");
    sb.append("  eEzsignsignatureAttachmentnamesource: ").append(eEzsignsignatureAttachmentnamesource).append("\n");
    sb.append("  bEzsignsignatureRequired: ").append(bEzsignsignatureRequired).append("\n");
    sb.append("  fkiEzsignfoldersignerassociationIDValidation: ").append(fkiEzsignfoldersignerassociationIDValidation).append("\n");
    sb.append("  dtEzsignsignatureDate: ").append(dtEzsignsignatureDate).append("\n");
    sb.append("  iEzsignsignatureattachmentCount: ").append(iEzsignsignatureattachmentCount).append("\n");
    sb.append("  sEzsignsignatureDescription: ").append(sEzsignsignatureDescription).append("\n");
    sb.append("  iEzsignsignatureMaxlength: ").append(iEzsignsignatureMaxlength).append("\n");
    sb.append("  eEzsignsignatureTextvalidation: ").append(eEzsignsignatureTextvalidation).append("\n");
    sb.append("  eEzsignsignatureDependencyrequirement: ").append(eEzsignsignatureDependencyrequirement).append("\n");
    sb.append("  sEzsignsignatureRegexp: ").append(sEzsignsignatureRegexp).append("\n");
    sb.append("  objContactName: ").append(objContactName).append("\n");
    sb.append("  objContactNameDelegation: ").append(objContactNameDelegation).append("\n");
    sb.append("  objSignature: ").append(objSignature).append("\n");
    sb.append("  bEzsignsignatureCustomdate: ").append(bEzsignsignatureCustomdate).append("\n");
    sb.append("  aObjEzsignsignaturecustomdate: ").append(aObjEzsignsignaturecustomdate).append("\n");
    sb.append("  objCreditcardtransaction: ").append(objCreditcardtransaction).append("\n");
    sb.append("  aObjEzsignelementdependency: ").append(aObjEzsignelementdependency).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
