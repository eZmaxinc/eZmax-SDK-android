/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * A Phone Object
 **/
@ApiModel(description = "A Phone Object")
public class PhoneRequestV2 {
  
  @SerializedName("pkiPhoneID")
  private Integer pkiPhoneID = null;
  @SerializedName("fkiPhonetypeID")
  private Integer fkiPhonetypeID = null;
  @SerializedName("sPhoneExtension")
  private String sPhoneExtension = null;
  @SerializedName("sPhoneE164")
  private String sPhoneE164 = null;

  /**
   * The unique ID of the Phone.
   * minimum: 0
   **/
  @ApiModelProperty(value = "The unique ID of the Phone.")
  public Integer getPkiPhoneID() {
    return pkiPhoneID;
  }
  public void setPkiPhoneID(Integer pkiPhoneID) {
    this.pkiPhoneID = pkiPhoneID;
  }

  /**
   * The unique ID of the Phonetype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home| |3|Mobile| |4|Fax| |5|Pager| |6|Toll Free|
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Phonetype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home| |3|Mobile| |4|Fax| |5|Pager| |6|Toll Free|")
  public Integer getFkiPhonetypeID() {
    return fkiPhonetypeID;
  }
  public void setFkiPhonetypeID(Integer fkiPhonetypeID) {
    this.fkiPhonetypeID = fkiPhonetypeID;
  }

  /**
   * The extension of the phone number.  The extension is the \"123\" section in this sample phone number: (514) 990-1516 x123.  It can also be used with international phone numbers
   **/
  @ApiModelProperty(value = "The extension of the phone number.  The extension is the \"123\" section in this sample phone number: (514) 990-1516 x123.  It can also be used with international phone numbers")
  public String getSPhoneExtension() {
    return sPhoneExtension;
  }
  public void setSPhoneExtension(String sPhoneExtension) {
    this.sPhoneExtension = sPhoneExtension;
  }

  /**
   * A phone number in E.164 Format
   **/
  @ApiModelProperty(value = "A phone number in E.164 Format")
  public String getSPhoneE164() {
    return sPhoneE164;
  }
  public void setSPhoneE164(String sPhoneE164) {
    this.sPhoneE164 = sPhoneE164;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhoneRequestV2 phoneRequestV2 = (PhoneRequestV2) o;
    return (this.pkiPhoneID == null ? phoneRequestV2.pkiPhoneID == null : this.pkiPhoneID.equals(phoneRequestV2.pkiPhoneID)) &&
        (this.fkiPhonetypeID == null ? phoneRequestV2.fkiPhonetypeID == null : this.fkiPhonetypeID.equals(phoneRequestV2.fkiPhonetypeID)) &&
        (this.sPhoneExtension == null ? phoneRequestV2.sPhoneExtension == null : this.sPhoneExtension.equals(phoneRequestV2.sPhoneExtension)) &&
        (this.sPhoneE164 == null ? phoneRequestV2.sPhoneE164 == null : this.sPhoneE164.equals(phoneRequestV2.sPhoneE164));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.pkiPhoneID == null ? 0: this.pkiPhoneID.hashCode());
    result = 31 * result + (this.fkiPhonetypeID == null ? 0: this.fkiPhonetypeID.hashCode());
    result = 31 * result + (this.sPhoneExtension == null ? 0: this.sPhoneExtension.hashCode());
    result = 31 * result + (this.sPhoneE164 == null ? 0: this.sPhoneE164.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhoneRequestV2 {\n");
    
    sb.append("  pkiPhoneID: ").append(pkiPhoneID).append("\n");
    sb.append("  fkiPhonetypeID: ").append(fkiPhonetypeID).append("\n");
    sb.append("  sPhoneExtension: ").append(sPhoneExtension).append("\n");
    sb.append("  sPhoneE164: ").append(sPhoneE164).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
