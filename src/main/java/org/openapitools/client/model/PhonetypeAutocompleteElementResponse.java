/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * A Phonetype AutocompleteElement Response
 **/
@ApiModel(description = "A Phonetype AutocompleteElement Response")
public class PhonetypeAutocompleteElementResponse {
  
  @SerializedName("pkiPhonetypeID")
  private Integer pkiPhonetypeID = null;
  @SerializedName("sPhonetypeNameX")
  private String sPhonetypeNameX = null;
  @SerializedName("bPhonetypeIsactive")
  private Boolean bPhonetypeIsactive = null;

  /**
   * The unique ID of the Phonetype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home| |3|Mobile| |4|Fax| |5|Pager| |6|Toll Free|
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Phonetype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home| |3|Mobile| |4|Fax| |5|Pager| |6|Toll Free|")
  public Integer getPkiPhonetypeID() {
    return pkiPhonetypeID;
  }
  public void setPkiPhonetypeID(Integer pkiPhonetypeID) {
    this.pkiPhonetypeID = pkiPhonetypeID;
  }

  /**
   * The name of the Phonetype in the language of the requester
   **/
  @ApiModelProperty(required = true, value = "The name of the Phonetype in the language of the requester")
  public String getSPhonetypeNameX() {
    return sPhonetypeNameX;
  }
  public void setSPhonetypeNameX(String sPhonetypeNameX) {
    this.sPhonetypeNameX = sPhonetypeNameX;
  }

  /**
   * Whether the Phonetype is active or not
   **/
  @ApiModelProperty(required = true, value = "Whether the Phonetype is active or not")
  public Boolean getBPhonetypeIsactive() {
    return bPhonetypeIsactive;
  }
  public void setBPhonetypeIsactive(Boolean bPhonetypeIsactive) {
    this.bPhonetypeIsactive = bPhonetypeIsactive;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhonetypeAutocompleteElementResponse phonetypeAutocompleteElementResponse = (PhonetypeAutocompleteElementResponse) o;
    return (this.pkiPhonetypeID == null ? phonetypeAutocompleteElementResponse.pkiPhonetypeID == null : this.pkiPhonetypeID.equals(phonetypeAutocompleteElementResponse.pkiPhonetypeID)) &&
        (this.sPhonetypeNameX == null ? phonetypeAutocompleteElementResponse.sPhonetypeNameX == null : this.sPhonetypeNameX.equals(phonetypeAutocompleteElementResponse.sPhonetypeNameX)) &&
        (this.bPhonetypeIsactive == null ? phonetypeAutocompleteElementResponse.bPhonetypeIsactive == null : this.bPhonetypeIsactive.equals(phonetypeAutocompleteElementResponse.bPhonetypeIsactive));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.pkiPhonetypeID == null ? 0: this.pkiPhonetypeID.hashCode());
    result = 31 * result + (this.sPhonetypeNameX == null ? 0: this.sPhonetypeNameX.hashCode());
    result = 31 * result + (this.bPhonetypeIsactive == null ? 0: this.bPhonetypeIsactive.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhonetypeAutocompleteElementResponse {\n");
    
    sb.append("  pkiPhonetypeID: ").append(pkiPhonetypeID).append("\n");
    sb.append("  sPhonetypeNameX: ").append(sPhonetypeNameX).append("\n");
    sb.append("  bPhonetypeIsactive: ").append(bPhonetypeIsactive).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
