/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Object representing a file used in a request or response context 
 **/
@ApiModel(description = "Object representing a file used in a request or response context ")
public class CommonFile {
  
  @SerializedName("sFileName")
  private String sFileName = null;
  @SerializedName("sFileUrl")
  private String sFileUrl = null;
  @SerializedName("sFileBase64")
  private byte[] sFileBase64 = null;
  public enum EFileSourceEnum {
     Base64,  Url, 
  };
  @SerializedName("eFileSource")
  private EFileSourceEnum eFileSource = null;

  /**
   * The name of the file
   **/
  @ApiModelProperty(required = true, value = "The name of the file")
  public String getSFileName() {
    return sFileName;
  }
  public void setSFileName(String sFileName) {
    this.sFileName = sFileName;
  }

  /**
   * The URL used to reach the File
   **/
  @ApiModelProperty(value = "The URL used to reach the File")
  public String getSFileUrl() {
    return sFileUrl;
  }
  public void setSFileUrl(String sFileUrl) {
    this.sFileUrl = sFileUrl;
  }

  /**
   * The Base64 encoded binary content of the File
   **/
  @ApiModelProperty(value = "The Base64 encoded binary content of the File")
  public byte[] getSFileBase64() {
    return sFileBase64;
  }
  public void setSFileBase64(byte[] sFileBase64) {
    this.sFileBase64 = sFileBase64;
  }

  /**
   * The source of the File
   **/
  @ApiModelProperty(required = true, value = "The source of the File")
  public EFileSourceEnum getEFileSource() {
    return eFileSource;
  }
  public void setEFileSource(EFileSourceEnum eFileSource) {
    this.eFileSource = eFileSource;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommonFile commonFile = (CommonFile) o;
    return (this.sFileName == null ? commonFile.sFileName == null : this.sFileName.equals(commonFile.sFileName)) &&
        (this.sFileUrl == null ? commonFile.sFileUrl == null : this.sFileUrl.equals(commonFile.sFileUrl)) &&
        (this.sFileBase64 == null ? commonFile.sFileBase64 == null : this.sFileBase64.equals(commonFile.sFileBase64)) &&
        (this.eFileSource == null ? commonFile.eFileSource == null : this.eFileSource.equals(commonFile.eFileSource));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.sFileName == null ? 0: this.sFileName.hashCode());
    result = 31 * result + (this.sFileUrl == null ? 0: this.sFileUrl.hashCode());
    result = 31 * result + (this.sFileBase64 == null ? 0: this.sFileBase64.hashCode());
    result = 31 * result + (this.eFileSource == null ? 0: this.eFileSource.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommonFile {\n");
    
    sb.append("  sFileName: ").append(sFileName).append("\n");
    sb.append("  sFileUrl: ").append(sFileUrl).append("\n");
    sb.append("  sFileBase64: ").append(sFileBase64).append("\n");
    sb.append("  eFileSource: ").append(eFileSource).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
