/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Payload for GET /1/object/attachment/{pkiAttachmentID}/getDownloadUrl
 **/
@ApiModel(description = "Payload for GET /1/object/attachment/{pkiAttachmentID}/getDownloadUrl")
public class AttachmentGetDownloadUrlV1ResponseMPayload {
  
  @SerializedName("sDownloadUrl")
  private String sDownloadUrl = null;

  /**
   * The Url to the requested attachment.  Url will expire after 5 minutes.
   **/
  @ApiModelProperty(required = true, value = "The Url to the requested attachment.  Url will expire after 5 minutes.")
  public String getSDownloadUrl() {
    return sDownloadUrl;
  }
  public void setSDownloadUrl(String sDownloadUrl) {
    this.sDownloadUrl = sDownloadUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttachmentGetDownloadUrlV1ResponseMPayload attachmentGetDownloadUrlV1ResponseMPayload = (AttachmentGetDownloadUrlV1ResponseMPayload) o;
    return (this.sDownloadUrl == null ? attachmentGetDownloadUrlV1ResponseMPayload.sDownloadUrl == null : this.sDownloadUrl.equals(attachmentGetDownloadUrlV1ResponseMPayload.sDownloadUrl));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.sDownloadUrl == null ? 0: this.sDownloadUrl.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttachmentGetDownloadUrlV1ResponseMPayload {\n");
    
    sb.append("  sDownloadUrl: ").append(sDownloadUrl).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
