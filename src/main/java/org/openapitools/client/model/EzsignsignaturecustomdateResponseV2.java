/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * An Ezsignsignaturecustomdate Object
 **/
@ApiModel(description = "An Ezsignsignaturecustomdate Object")
public class EzsignsignaturecustomdateResponseV2 {
  
  @SerializedName("pkiEzsignsignaturecustomdateID")
  private Integer pkiEzsignsignaturecustomdateID = null;
  @SerializedName("iEzsignsignaturecustomdateOffsetx")
  private Integer iEzsignsignaturecustomdateOffsetx = null;
  @SerializedName("iEzsignsignaturecustomdateOffsety")
  private Integer iEzsignsignaturecustomdateOffsety = null;
  @SerializedName("sEzsignsignaturecustomdateFormat")
  private String sEzsignsignaturecustomdateFormat = null;

  /**
   * The unique ID of the Ezsignsignaturecustomdate
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "The unique ID of the Ezsignsignaturecustomdate")
  public Integer getPkiEzsignsignaturecustomdateID() {
    return pkiEzsignsignaturecustomdateID;
  }
  public void setPkiEzsignsignaturecustomdateID(Integer pkiEzsignsignaturecustomdateID) {
    this.pkiEzsignsignaturecustomdateID = pkiEzsignsignaturecustomdateID;
  }

  /**
   * The X coordinate (Horizontal) where to put the Ezsignsignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignaturecustomdate block 2 inches from the left of the signature, you would use \"200\" for the X coordinate.
   **/
  @ApiModelProperty(required = true, value = "The X coordinate (Horizontal) where to put the Ezsignsignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignaturecustomdate block 2 inches from the left of the signature, you would use \"200\" for the X coordinate.")
  public Integer getIEzsignsignaturecustomdateOffsetx() {
    return iEzsignsignaturecustomdateOffsetx;
  }
  public void setIEzsignsignaturecustomdateOffsetx(Integer iEzsignsignaturecustomdateOffsetx) {
    this.iEzsignsignaturecustomdateOffsetx = iEzsignsignaturecustomdateOffsetx;
  }

  /**
   * The Y coordinate (Vertical) where to put the Ezsignsignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignaturecustomdate block 3 inches from the top of the signature, you would use \"300\" for the Y coordinate.
   **/
  @ApiModelProperty(required = true, value = "The Y coordinate (Vertical) where to put the Ezsignsignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignaturecustomdate block 3 inches from the top of the signature, you would use \"300\" for the Y coordinate.")
  public Integer getIEzsignsignaturecustomdateOffsety() {
    return iEzsignsignaturecustomdateOffsety;
  }
  public void setIEzsignsignaturecustomdateOffsety(Integer iEzsignsignaturecustomdateOffsety) {
    this.iEzsignsignaturecustomdateOffsety = iEzsignsignaturecustomdateOffsety;
  }

  /**
   * The custom date format to use  You can use the codes below and they will be replaced at signature time. Text values like month and day names will be rendered in the proper language. Other text will be left as-is.  The codes examples below are based on the following datetime: Thursday, January 6, 2022 at 08:07:09 EST  For example, the format \"Signature date: {MM}/{DD}/{YYYY} {hh}:{mm}\" would become \"Signature date: 01/06/2022 08:07\"  **Year**  | Code | Example | | - | - | | {YYYY} | 2022 | | {YY} | 22 |  **Month**  | Code | Example | | - | - | | {MonthCapitalize} | Janvier | | {Month} | janvier | | {MM} | 01 | | {M} | 1 |  **Day**  | Code | Example | | - | - | | {DayCapitalize} | Jeudi | | {Day} | jeudi | | {DD} | 06 | | {D} | 6 |  **Hour**  | Code | Example | | - | - | | {hh} | 08 |  **Minute**  | Code | Example | | - | - | | {mm} | 07 |  **Second**  | Code | Example | | - | - | | {ss} | 09 |        **Timezone**  | Code | Example | | - | - | | {Z} | EST |       **Time**  | Code | Example | | - | - | | {Time} | 08:07:09 |   | {TimeZ} | 08:07:09 EST |     **Date**  | Code | Example | | - | - | | {Date} | 2022-01-06 |   | {DateText} | 1er Janvier 2022 |  **Full**  | Code | Example | | - | - | | {DateTime} | 2022-01-06 08:07:09 |   | {DateTimeZ} | 2022-01-06 08:07:09 EST | 
   **/
  @ApiModelProperty(required = true, value = "The custom date format to use  You can use the codes below and they will be replaced at signature time. Text values like month and day names will be rendered in the proper language. Other text will be left as-is.  The codes examples below are based on the following datetime: Thursday, January 6, 2022 at 08:07:09 EST  For example, the format \"Signature date: {MM}/{DD}/{YYYY} {hh}:{mm}\" would become \"Signature date: 01/06/2022 08:07\"  **Year**  | Code | Example | | - | - | | {YYYY} | 2022 | | {YY} | 22 |  **Month**  | Code | Example | | - | - | | {MonthCapitalize} | Janvier | | {Month} | janvier | | {MM} | 01 | | {M} | 1 |  **Day**  | Code | Example | | - | - | | {DayCapitalize} | Jeudi | | {Day} | jeudi | | {DD} | 06 | | {D} | 6 |  **Hour**  | Code | Example | | - | - | | {hh} | 08 |  **Minute**  | Code | Example | | - | - | | {mm} | 07 |  **Second**  | Code | Example | | - | - | | {ss} | 09 |        **Timezone**  | Code | Example | | - | - | | {Z} | EST |       **Time**  | Code | Example | | - | - | | {Time} | 08:07:09 |   | {TimeZ} | 08:07:09 EST |     **Date**  | Code | Example | | - | - | | {Date} | 2022-01-06 |   | {DateText} | 1er Janvier 2022 |  **Full**  | Code | Example | | - | - | | {DateTime} | 2022-01-06 08:07:09 |   | {DateTimeZ} | 2022-01-06 08:07:09 EST | ")
  public String getSEzsignsignaturecustomdateFormat() {
    return sEzsignsignaturecustomdateFormat;
  }
  public void setSEzsignsignaturecustomdateFormat(String sEzsignsignaturecustomdateFormat) {
    this.sEzsignsignaturecustomdateFormat = sEzsignsignaturecustomdateFormat;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignsignaturecustomdateResponseV2 ezsignsignaturecustomdateResponseV2 = (EzsignsignaturecustomdateResponseV2) o;
    return (this.pkiEzsignsignaturecustomdateID == null ? ezsignsignaturecustomdateResponseV2.pkiEzsignsignaturecustomdateID == null : this.pkiEzsignsignaturecustomdateID.equals(ezsignsignaturecustomdateResponseV2.pkiEzsignsignaturecustomdateID)) &&
        (this.iEzsignsignaturecustomdateOffsetx == null ? ezsignsignaturecustomdateResponseV2.iEzsignsignaturecustomdateOffsetx == null : this.iEzsignsignaturecustomdateOffsetx.equals(ezsignsignaturecustomdateResponseV2.iEzsignsignaturecustomdateOffsetx)) &&
        (this.iEzsignsignaturecustomdateOffsety == null ? ezsignsignaturecustomdateResponseV2.iEzsignsignaturecustomdateOffsety == null : this.iEzsignsignaturecustomdateOffsety.equals(ezsignsignaturecustomdateResponseV2.iEzsignsignaturecustomdateOffsety)) &&
        (this.sEzsignsignaturecustomdateFormat == null ? ezsignsignaturecustomdateResponseV2.sEzsignsignaturecustomdateFormat == null : this.sEzsignsignaturecustomdateFormat.equals(ezsignsignaturecustomdateResponseV2.sEzsignsignaturecustomdateFormat));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.pkiEzsignsignaturecustomdateID == null ? 0: this.pkiEzsignsignaturecustomdateID.hashCode());
    result = 31 * result + (this.iEzsignsignaturecustomdateOffsetx == null ? 0: this.iEzsignsignaturecustomdateOffsetx.hashCode());
    result = 31 * result + (this.iEzsignsignaturecustomdateOffsety == null ? 0: this.iEzsignsignaturecustomdateOffsety.hashCode());
    result = 31 * result + (this.sEzsignsignaturecustomdateFormat == null ? 0: this.sEzsignsignaturecustomdateFormat.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignsignaturecustomdateResponseV2 {\n");
    
    sb.append("  pkiEzsignsignaturecustomdateID: ").append(pkiEzsignsignaturecustomdateID).append("\n");
    sb.append("  iEzsignsignaturecustomdateOffsetx: ").append(iEzsignsignaturecustomdateOffsetx).append("\n");
    sb.append("  iEzsignsignaturecustomdateOffsety: ").append(iEzsignsignaturecustomdateOffsety).append("\n");
    sb.append("  sEzsignsignaturecustomdateFormat: ").append(sEzsignsignaturecustomdateFormat).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
