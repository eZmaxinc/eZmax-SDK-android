/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package eZmaxAPI;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("ActivesessionGetCurrentV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivesessionGetCurrentV1Response>>(){}.getType();
    }
    
    if ("ActivesessionGetCurrentV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivesessionGetCurrentV1ResponseAllOf>>(){}.getType();
    }
    
    if ("ActivesessionGetCurrentV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivesessionGetCurrentV1ResponseMPayload>>(){}.getType();
    }
    
    if ("AddressRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddressRequest>>(){}.getType();
    }
    
    if ("ApikeyCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApikeyCreateObjectV1Request>>(){}.getType();
    }
    
    if ("ApikeyCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApikeyCreateObjectV1Response>>(){}.getType();
    }
    
    if ("ApikeyCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApikeyCreateObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("ApikeyCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApikeyCreateObjectV1ResponseMPayload>>(){}.getType();
    }
    
    if ("ApikeyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApikeyRequest>>(){}.getType();
    }
    
    if ("ApikeyRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApikeyRequestCompound>>(){}.getType();
    }
    
    if ("ApikeyResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApikeyResponse>>(){}.getType();
    }
    
    if ("AttemptResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttemptResponse>>(){}.getType();
    }
    
    if ("AuthenticateAuthenticateV2Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<AuthenticateAuthenticateV2Request>>(){}.getType();
    }
    
    if ("AuthenticateAuthenticateV2Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AuthenticateAuthenticateV2Response>>(){}.getType();
    }
    
    if ("AuthenticateAuthenticateV2ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<AuthenticateAuthenticateV2ResponseAllOf>>(){}.getType();
    }
    
    if ("AuthenticateAuthenticateV2ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<AuthenticateAuthenticateV2ResponseMPayload>>(){}.getType();
    }
    
    if ("CommonAudit".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonAudit>>(){}.getType();
    }
    
    if ("CommonGetAutocompleteV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonGetAutocompleteV1Response>>(){}.getType();
    }
    
    if ("CommonGetAutocompleteV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonGetAutocompleteV1ResponseAllOf>>(){}.getType();
    }
    
    if ("CommonGetListV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonGetListV1ResponseMPayload>>(){}.getType();
    }
    
    if ("CommonResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonResponse>>(){}.getType();
    }
    
    if ("CommonResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonResponseError>>(){}.getType();
    }
    
    if ("CommonResponseFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonResponseFilter>>(){}.getType();
    }
    
    if ("CommonResponseGetList".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonResponseGetList>>(){}.getType();
    }
    
    if ("CommonResponseObjDebug".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonResponseObjDebug>>(){}.getType();
    }
    
    if ("CommonResponseObjDebugPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonResponseObjDebugPayload>>(){}.getType();
    }
    
    if ("CommonResponseObjDebugPayloadGetList".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonResponseObjDebugPayloadGetList>>(){}.getType();
    }
    
    if ("CommonResponseObjDebugPayloadGetListAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonResponseObjDebugPayloadGetListAllOf>>(){}.getType();
    }
    
    if ("CommonResponseObjSQLQuery".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonResponseObjSQLQuery>>(){}.getType();
    }
    
    if ("CommonWebhook".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommonWebhook>>(){}.getType();
    }
    
    if ("ContactRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactRequest>>(){}.getType();
    }
    
    if ("ContactRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactRequestCompound>>(){}.getType();
    }
    
    if ("ContactRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactRequestCompoundAllOf>>(){}.getType();
    }
    
    if ("ContactinformationsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactinformationsRequest>>(){}.getType();
    }
    
    if ("ContactinformationsRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactinformationsRequestCompound>>(){}.getType();
    }
    
    if ("ContactinformationsRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactinformationsRequestCompoundAllOf>>(){}.getType();
    }
    
    if ("CustomAutocompleteElementResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomAutocompleteElementResponse>>(){}.getType();
    }
    
    if ("CustomFormDataDocumentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomFormDataDocumentResponse>>(){}.getType();
    }
    
    if ("CustomFormDataSignerResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomFormDataSignerResponse>>(){}.getType();
    }
    
    if ("CustomFormsDataFolderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomFormsDataFolderResponse>>(){}.getType();
    }
    
    if ("CustomWordPositionOccurenceResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomWordPositionOccurenceResponse>>(){}.getType();
    }
    
    if ("CustomWordPositionWordResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomWordPositionWordResponse>>(){}.getType();
    }
    
    if ("EmailRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<EmailRequest>>(){}.getType();
    }
    
    if ("EzsigndocumentApplyEzsigntemplateV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentApplyEzsigntemplateV1Request>>(){}.getType();
    }
    
    if ("EzsigndocumentApplyEzsigntemplateV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentApplyEzsigntemplateV1Response>>(){}.getType();
    }
    
    if ("EzsigndocumentApplyEzsigntemplateV2Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentApplyEzsigntemplateV2Request>>(){}.getType();
    }
    
    if ("EzsigndocumentApplyEzsigntemplateV2Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentApplyEzsigntemplateV2Response>>(){}.getType();
    }
    
    if ("EzsigndocumentCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentCreateObjectV1Request>>(){}.getType();
    }
    
    if ("EzsigndocumentCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentCreateObjectV1Response>>(){}.getType();
    }
    
    if ("EzsigndocumentCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentCreateObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsigndocumentCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentCreateObjectV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsigndocumentDeleteObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentDeleteObjectV1Response>>(){}.getType();
    }
    
    if ("EzsigndocumentGetDownloadUrlV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetDownloadUrlV1Response>>(){}.getType();
    }
    
    if ("EzsigndocumentGetDownloadUrlV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetDownloadUrlV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsigndocumentGetDownloadUrlV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetDownloadUrlV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsigndocumentGetEzsignpagesV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetEzsignpagesV1Response>>(){}.getType();
    }
    
    if ("EzsigndocumentGetEzsignpagesV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetEzsignpagesV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsigndocumentGetEzsignpagesV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetEzsignpagesV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsigndocumentGetFormDataV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetFormDataV1Response>>(){}.getType();
    }
    
    if ("EzsigndocumentGetFormDataV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetFormDataV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsigndocumentGetFormDataV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetFormDataV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsigndocumentGetObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetObjectV1Response>>(){}.getType();
    }
    
    if ("EzsigndocumentGetObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsigndocumentGetObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetObjectV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsigndocumentGetWordsPositionsV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetWordsPositionsV1Request>>(){}.getType();
    }
    
    if ("EzsigndocumentGetWordsPositionsV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetWordsPositionsV1Response>>(){}.getType();
    }
    
    if ("EzsigndocumentGetWordsPositionsV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentGetWordsPositionsV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsigndocumentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentRequest>>(){}.getType();
    }
    
    if ("EzsigndocumentRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentRequestCompound>>(){}.getType();
    }
    
    if ("EzsigndocumentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentResponse>>(){}.getType();
    }
    
    if ("EzsigndocumentResponseCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsigndocumentResponseCompound>>(){}.getType();
    }
    
    if ("EzsignfolderCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderCreateObjectV1Request>>(){}.getType();
    }
    
    if ("EzsignfolderCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderCreateObjectV1Response>>(){}.getType();
    }
    
    if ("EzsignfolderCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderCreateObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignfolderCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderCreateObjectV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsignfolderDeleteObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderDeleteObjectV1Response>>(){}.getType();
    }
    
    if ("EzsignfolderGetFormsDataV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetFormsDataV1Response>>(){}.getType();
    }
    
    if ("EzsignfolderGetFormsDataV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetFormsDataV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignfolderGetFormsDataV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetFormsDataV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsignfolderGetListV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetListV1Response>>(){}.getType();
    }
    
    if ("EzsignfolderGetListV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetListV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignfolderGetListV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetListV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsignfolderGetListV1ResponseMPayloadAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetListV1ResponseMPayloadAllOf>>(){}.getType();
    }
    
    if ("EzsignfolderGetObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetObjectV1Response>>(){}.getType();
    }
    
    if ("EzsignfolderGetObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignfolderGetObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderGetObjectV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsignfolderListElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderListElement>>(){}.getType();
    }
    
    if ("EzsignfolderRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderRequest>>(){}.getType();
    }
    
    if ("EzsignfolderRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderRequestCompound>>(){}.getType();
    }
    
    if ("EzsignfolderRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderRequestCompoundAllOf>>(){}.getType();
    }
    
    if ("EzsignfolderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderResponse>>(){}.getType();
    }
    
    if ("EzsignfolderResponseCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderResponseCompound>>(){}.getType();
    }
    
    if ("EzsignfolderSendV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderSendV1Request>>(){}.getType();
    }
    
    if ("EzsignfolderSendV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderSendV1Response>>(){}.getType();
    }
    
    if ("EzsignfolderUnsendV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfolderUnsendV1Response>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationCreateObjectV1Request>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationCreateObjectV1Response>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationCreateObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationCreateObjectV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationDeleteObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationDeleteObjectV1Response>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetInPersonLoginUrlV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationGetInPersonLoginUrlV1Response>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationGetObjectV1Response>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationGetObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationRequest>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationRequestCompound>>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldersignerassociationRequestCompoundAllOf>>(){}.getType();
    }
    
    if ("EzsignfoldertypeGetListV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldertypeGetListV1Response>>(){}.getType();
    }
    
    if ("EzsignfoldertypeGetListV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldertypeGetListV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignfoldertypeGetListV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldertypeGetListV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsignfoldertypeGetListV1ResponseMPayloadAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldertypeGetListV1ResponseMPayloadAllOf>>(){}.getType();
    }
    
    if ("EzsignfoldertypeListElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignfoldertypeListElement>>(){}.getType();
    }
    
    if ("EzsignformfieldResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignformfieldResponse>>(){}.getType();
    }
    
    if ("EzsignformfieldResponseCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignformfieldResponseCompound>>(){}.getType();
    }
    
    if ("EzsignformfieldgroupResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignformfieldgroupResponse>>(){}.getType();
    }
    
    if ("EzsignformfieldgroupResponseCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignformfieldgroupResponseCompound>>(){}.getType();
    }
    
    if ("EzsignformfieldgroupResponseCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignformfieldgroupResponseCompoundAllOf>>(){}.getType();
    }
    
    if ("EzsignpageResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignpageResponse>>(){}.getType();
    }
    
    if ("EzsignsignatureCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignatureCreateObjectV1Request>>(){}.getType();
    }
    
    if ("EzsignsignatureCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignatureCreateObjectV1Response>>(){}.getType();
    }
    
    if ("EzsignsignatureCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignatureCreateObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignsignatureCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignatureCreateObjectV1ResponseMPayload>>(){}.getType();
    }
    
    if ("EzsignsignatureDeleteObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignatureDeleteObjectV1Response>>(){}.getType();
    }
    
    if ("EzsignsignatureGetObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignatureGetObjectV1Response>>(){}.getType();
    }
    
    if ("EzsignsignatureGetObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignatureGetObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("EzsignsignatureRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignatureRequest>>(){}.getType();
    }
    
    if ("EzsignsignatureRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignatureRequestCompound>>(){}.getType();
    }
    
    if ("EzsignsignerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignerRequest>>(){}.getType();
    }
    
    if ("EzsignsignerRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignerRequestCompound>>(){}.getType();
    }
    
    if ("EzsignsignerRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignerRequestCompoundAllOf>>(){}.getType();
    }
    
    if ("EzsignsignerRequestCompoundContact".equalsIgnoreCase(className)) {
      return new TypeToken<List<EzsignsignerRequestCompoundContact>>(){}.getType();
    }
    
    if ("FieldEEzsigndocumentStep".equalsIgnoreCase(className)) {
      return new TypeToken<List<FieldEEzsigndocumentStep>>(){}.getType();
    }
    
    if ("FieldEEzsignfolderSendreminderfrequency".equalsIgnoreCase(className)) {
      return new TypeToken<List<FieldEEzsignfolderSendreminderfrequency>>(){}.getType();
    }
    
    if ("FieldEEzsignfolderStep".equalsIgnoreCase(className)) {
      return new TypeToken<List<FieldEEzsignfolderStep>>(){}.getType();
    }
    
    if ("FieldEEzsignfoldertypePrivacylevel".equalsIgnoreCase(className)) {
      return new TypeToken<List<FieldEEzsignfoldertypePrivacylevel>>(){}.getType();
    }
    
    if ("FieldEEzsignsignatureType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FieldEEzsignsignatureType>>(){}.getType();
    }
    
    if ("FieldEPhoneType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FieldEPhoneType>>(){}.getType();
    }
    
    if ("FieldEUserType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FieldEUserType>>(){}.getType();
    }
    
    if ("FieldEUserTypeSSPR".equalsIgnoreCase(className)) {
      return new TypeToken<List<FieldEUserTypeSSPR>>(){}.getType();
    }
    
    if ("FranchisereferalincomeCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<FranchisereferalincomeCreateObjectV1Request>>(){}.getType();
    }
    
    if ("FranchisereferalincomeCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<FranchisereferalincomeCreateObjectV1Response>>(){}.getType();
    }
    
    if ("FranchisereferalincomeCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<FranchisereferalincomeCreateObjectV1ResponseAllOf>>(){}.getType();
    }
    
    if ("FranchisereferalincomeCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<FranchisereferalincomeCreateObjectV1ResponseMPayload>>(){}.getType();
    }
    
    if ("FranchisereferalincomeRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<FranchisereferalincomeRequest>>(){}.getType();
    }
    
    if ("FranchisereferalincomeRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<List<FranchisereferalincomeRequestCompound>>(){}.getType();
    }
    
    if ("FranchisereferalincomeRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<FranchisereferalincomeRequestCompoundAllOf>>(){}.getType();
    }
    
    if ("GlobalCustomerGetEndpointV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<GlobalCustomerGetEndpointV1Response>>(){}.getType();
    }
    
    if ("HeaderAcceptLanguage".equalsIgnoreCase(className)) {
      return new TypeToken<List<HeaderAcceptLanguage>>(){}.getType();
    }
    
    if ("ListGetListpresentationV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListGetListpresentationV1Response>>(){}.getType();
    }
    
    if ("ListGetListpresentationV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListGetListpresentationV1ResponseAllOf>>(){}.getType();
    }
    
    if ("ListGetListpresentationV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListGetListpresentationV1ResponseMPayload>>(){}.getType();
    }
    
    if ("ListSaveListpresentationV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListSaveListpresentationV1Request>>(){}.getType();
    }
    
    if ("ListSaveListpresentationV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListSaveListpresentationV1Response>>(){}.getType();
    }
    
    if ("ListpresentationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListpresentationRequest>>(){}.getType();
    }
    
    if ("MultilingualApikeyDescription".equalsIgnoreCase(className)) {
      return new TypeToken<List<MultilingualApikeyDescription>>(){}.getType();
    }
    
    if ("PhoneRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<PhoneRequest>>(){}.getType();
    }
    
    if ("SsprResetPasswordRequestV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<SsprResetPasswordRequestV1Request>>(){}.getType();
    }
    
    if ("SsprResetPasswordV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<SsprResetPasswordV1Request>>(){}.getType();
    }
    
    if ("SsprSendUsernamesV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<SsprSendUsernamesV1Request>>(){}.getType();
    }
    
    if ("SsprUnlockAccountRequestV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<SsprUnlockAccountRequestV1Request>>(){}.getType();
    }
    
    if ("SsprUnlockAccountV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<SsprUnlockAccountV1Request>>(){}.getType();
    }
    
    if ("SsprValidateTokenV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<SsprValidateTokenV1Request>>(){}.getType();
    }
    
    if ("UNUSEDEzsigndocumentEditObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNUSEDEzsigndocumentEditObjectV1Request>>(){}.getType();
    }
    
    if ("UNUSEDEzsigndocumentEditObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNUSEDEzsigndocumentEditObjectV1Response>>(){}.getType();
    }
    
    if ("UNUSEDEzsignfolderEditObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNUSEDEzsignfolderEditObjectV1Request>>(){}.getType();
    }
    
    if ("UNUSEDEzsignfolderEditObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNUSEDEzsignfolderEditObjectV1Response>>(){}.getType();
    }
    
    if ("UNUSEDEzsignfoldersignerassociationEditObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNUSEDEzsignfoldersignerassociationEditObjectV1Request>>(){}.getType();
    }
    
    if ("UNUSEDEzsignfoldersignerassociationEditObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNUSEDEzsignfoldersignerassociationEditObjectV1Response>>(){}.getType();
    }
    
    if ("UNUSEDEzsignsignatureEditObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNUSEDEzsignsignatureEditObjectV1Request>>(){}.getType();
    }
    
    if ("UNUSEDEzsignsignatureEditObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNUSEDEzsignsignatureEditObjectV1Response>>(){}.getType();
    }
    
    if ("UserCreateEzsignuserV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserCreateEzsignuserV1Request>>(){}.getType();
    }
    
    if ("UserCreateEzsignuserV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserCreateEzsignuserV1Response>>(){}.getType();
    }
    
    if ("UserCreateEzsignuserV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserCreateEzsignuserV1ResponseAllOf>>(){}.getType();
    }
    
    if ("UserCreateEzsignuserV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserCreateEzsignuserV1ResponseMPayload>>(){}.getType();
    }
    
    if ("UserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserResponse>>(){}.getType();
    }
    
    if ("WebhookEzsignDocumentCompleted".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookEzsignDocumentCompleted>>(){}.getType();
    }
    
    if ("WebhookEzsignDocumentCompletedAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookEzsignDocumentCompletedAllOf>>(){}.getType();
    }
    
    if ("WebhookEzsignFolderCompleted".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookEzsignFolderCompleted>>(){}.getType();
    }
    
    if ("WebhookEzsignFolderCompletedAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookEzsignFolderCompletedAllOf>>(){}.getType();
    }
    
    if ("WebhookResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookResponse>>(){}.getType();
    }
    
    if ("WebhookUserUserCreated".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookUserUserCreated>>(){}.getType();
    }
    
    if ("WebhookUserUserCreatedAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookUserUserCreatedAllOf>>(){}.getType();
    }
    
    if ("WebsiteRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebsiteRequest>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("ActivesessionGetCurrentV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<ActivesessionGetCurrentV1Response>(){}.getType();
    }
    
    if ("ActivesessionGetCurrentV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<ActivesessionGetCurrentV1ResponseAllOf>(){}.getType();
    }
    
    if ("ActivesessionGetCurrentV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<ActivesessionGetCurrentV1ResponseMPayload>(){}.getType();
    }
    
    if ("AddressRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AddressRequest>(){}.getType();
    }
    
    if ("ApikeyCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<ApikeyCreateObjectV1Request>(){}.getType();
    }
    
    if ("ApikeyCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<ApikeyCreateObjectV1Response>(){}.getType();
    }
    
    if ("ApikeyCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<ApikeyCreateObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("ApikeyCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<ApikeyCreateObjectV1ResponseMPayload>(){}.getType();
    }
    
    if ("ApikeyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ApikeyRequest>(){}.getType();
    }
    
    if ("ApikeyRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<ApikeyRequestCompound>(){}.getType();
    }
    
    if ("ApikeyResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApikeyResponse>(){}.getType();
    }
    
    if ("AttemptResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AttemptResponse>(){}.getType();
    }
    
    if ("AuthenticateAuthenticateV2Request".equalsIgnoreCase(className)) {
      return new TypeToken<AuthenticateAuthenticateV2Request>(){}.getType();
    }
    
    if ("AuthenticateAuthenticateV2Response".equalsIgnoreCase(className)) {
      return new TypeToken<AuthenticateAuthenticateV2Response>(){}.getType();
    }
    
    if ("AuthenticateAuthenticateV2ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<AuthenticateAuthenticateV2ResponseAllOf>(){}.getType();
    }
    
    if ("AuthenticateAuthenticateV2ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<AuthenticateAuthenticateV2ResponseMPayload>(){}.getType();
    }
    
    if ("CommonAudit".equalsIgnoreCase(className)) {
      return new TypeToken<CommonAudit>(){}.getType();
    }
    
    if ("CommonGetAutocompleteV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<CommonGetAutocompleteV1Response>(){}.getType();
    }
    
    if ("CommonGetAutocompleteV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<CommonGetAutocompleteV1ResponseAllOf>(){}.getType();
    }
    
    if ("CommonGetListV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<CommonGetListV1ResponseMPayload>(){}.getType();
    }
    
    if ("CommonResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CommonResponse>(){}.getType();
    }
    
    if ("CommonResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<CommonResponseError>(){}.getType();
    }
    
    if ("CommonResponseFilter".equalsIgnoreCase(className)) {
      return new TypeToken<CommonResponseFilter>(){}.getType();
    }
    
    if ("CommonResponseGetList".equalsIgnoreCase(className)) {
      return new TypeToken<CommonResponseGetList>(){}.getType();
    }
    
    if ("CommonResponseObjDebug".equalsIgnoreCase(className)) {
      return new TypeToken<CommonResponseObjDebug>(){}.getType();
    }
    
    if ("CommonResponseObjDebugPayload".equalsIgnoreCase(className)) {
      return new TypeToken<CommonResponseObjDebugPayload>(){}.getType();
    }
    
    if ("CommonResponseObjDebugPayloadGetList".equalsIgnoreCase(className)) {
      return new TypeToken<CommonResponseObjDebugPayloadGetList>(){}.getType();
    }
    
    if ("CommonResponseObjDebugPayloadGetListAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<CommonResponseObjDebugPayloadGetListAllOf>(){}.getType();
    }
    
    if ("CommonResponseObjSQLQuery".equalsIgnoreCase(className)) {
      return new TypeToken<CommonResponseObjSQLQuery>(){}.getType();
    }
    
    if ("CommonWebhook".equalsIgnoreCase(className)) {
      return new TypeToken<CommonWebhook>(){}.getType();
    }
    
    if ("ContactRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ContactRequest>(){}.getType();
    }
    
    if ("ContactRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<ContactRequestCompound>(){}.getType();
    }
    
    if ("ContactRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<ContactRequestCompoundAllOf>(){}.getType();
    }
    
    if ("ContactinformationsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ContactinformationsRequest>(){}.getType();
    }
    
    if ("ContactinformationsRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<ContactinformationsRequestCompound>(){}.getType();
    }
    
    if ("ContactinformationsRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<ContactinformationsRequestCompoundAllOf>(){}.getType();
    }
    
    if ("CustomAutocompleteElementResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CustomAutocompleteElementResponse>(){}.getType();
    }
    
    if ("CustomFormDataDocumentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CustomFormDataDocumentResponse>(){}.getType();
    }
    
    if ("CustomFormDataSignerResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CustomFormDataSignerResponse>(){}.getType();
    }
    
    if ("CustomFormsDataFolderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CustomFormsDataFolderResponse>(){}.getType();
    }
    
    if ("CustomWordPositionOccurenceResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CustomWordPositionOccurenceResponse>(){}.getType();
    }
    
    if ("CustomWordPositionWordResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CustomWordPositionWordResponse>(){}.getType();
    }
    
    if ("EmailRequest".equalsIgnoreCase(className)) {
      return new TypeToken<EmailRequest>(){}.getType();
    }
    
    if ("EzsigndocumentApplyEzsigntemplateV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentApplyEzsigntemplateV1Request>(){}.getType();
    }
    
    if ("EzsigndocumentApplyEzsigntemplateV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentApplyEzsigntemplateV1Response>(){}.getType();
    }
    
    if ("EzsigndocumentApplyEzsigntemplateV2Request".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentApplyEzsigntemplateV2Request>(){}.getType();
    }
    
    if ("EzsigndocumentApplyEzsigntemplateV2Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentApplyEzsigntemplateV2Response>(){}.getType();
    }
    
    if ("EzsigndocumentCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentCreateObjectV1Request>(){}.getType();
    }
    
    if ("EzsigndocumentCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentCreateObjectV1Response>(){}.getType();
    }
    
    if ("EzsigndocumentCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentCreateObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsigndocumentCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentCreateObjectV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsigndocumentDeleteObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentDeleteObjectV1Response>(){}.getType();
    }
    
    if ("EzsigndocumentGetDownloadUrlV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetDownloadUrlV1Response>(){}.getType();
    }
    
    if ("EzsigndocumentGetDownloadUrlV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetDownloadUrlV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsigndocumentGetDownloadUrlV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetDownloadUrlV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsigndocumentGetEzsignpagesV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetEzsignpagesV1Response>(){}.getType();
    }
    
    if ("EzsigndocumentGetEzsignpagesV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetEzsignpagesV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsigndocumentGetEzsignpagesV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetEzsignpagesV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsigndocumentGetFormDataV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetFormDataV1Response>(){}.getType();
    }
    
    if ("EzsigndocumentGetFormDataV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetFormDataV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsigndocumentGetFormDataV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetFormDataV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsigndocumentGetObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetObjectV1Response>(){}.getType();
    }
    
    if ("EzsigndocumentGetObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsigndocumentGetObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetObjectV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsigndocumentGetWordsPositionsV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetWordsPositionsV1Request>(){}.getType();
    }
    
    if ("EzsigndocumentGetWordsPositionsV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetWordsPositionsV1Response>(){}.getType();
    }
    
    if ("EzsigndocumentGetWordsPositionsV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentGetWordsPositionsV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsigndocumentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentRequest>(){}.getType();
    }
    
    if ("EzsigndocumentRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentRequestCompound>(){}.getType();
    }
    
    if ("EzsigndocumentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentResponse>(){}.getType();
    }
    
    if ("EzsigndocumentResponseCompound".equalsIgnoreCase(className)) {
      return new TypeToken<EzsigndocumentResponseCompound>(){}.getType();
    }
    
    if ("EzsignfolderCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderCreateObjectV1Request>(){}.getType();
    }
    
    if ("EzsignfolderCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderCreateObjectV1Response>(){}.getType();
    }
    
    if ("EzsignfolderCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderCreateObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignfolderCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderCreateObjectV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsignfolderDeleteObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderDeleteObjectV1Response>(){}.getType();
    }
    
    if ("EzsignfolderGetFormsDataV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetFormsDataV1Response>(){}.getType();
    }
    
    if ("EzsignfolderGetFormsDataV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetFormsDataV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignfolderGetFormsDataV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetFormsDataV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsignfolderGetListV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetListV1Response>(){}.getType();
    }
    
    if ("EzsignfolderGetListV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetListV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignfolderGetListV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetListV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsignfolderGetListV1ResponseMPayloadAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetListV1ResponseMPayloadAllOf>(){}.getType();
    }
    
    if ("EzsignfolderGetObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetObjectV1Response>(){}.getType();
    }
    
    if ("EzsignfolderGetObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignfolderGetObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderGetObjectV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsignfolderListElement".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderListElement>(){}.getType();
    }
    
    if ("EzsignfolderRequest".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderRequest>(){}.getType();
    }
    
    if ("EzsignfolderRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderRequestCompound>(){}.getType();
    }
    
    if ("EzsignfolderRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderRequestCompoundAllOf>(){}.getType();
    }
    
    if ("EzsignfolderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderResponse>(){}.getType();
    }
    
    if ("EzsignfolderResponseCompound".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderResponseCompound>(){}.getType();
    }
    
    if ("EzsignfolderSendV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderSendV1Request>(){}.getType();
    }
    
    if ("EzsignfolderSendV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderSendV1Response>(){}.getType();
    }
    
    if ("EzsignfolderUnsendV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfolderUnsendV1Response>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationCreateObjectV1Request>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationCreateObjectV1Response>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationCreateObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationCreateObjectV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationDeleteObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationDeleteObjectV1Response>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetInPersonLoginUrlV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationGetInPersonLoginUrlV1Response>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationGetObjectV1Response>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationGetObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationGetObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationRequest>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationRequestCompound>(){}.getType();
    }
    
    if ("EzsignfoldersignerassociationRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldersignerassociationRequestCompoundAllOf>(){}.getType();
    }
    
    if ("EzsignfoldertypeGetListV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldertypeGetListV1Response>(){}.getType();
    }
    
    if ("EzsignfoldertypeGetListV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldertypeGetListV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignfoldertypeGetListV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldertypeGetListV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsignfoldertypeGetListV1ResponseMPayloadAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldertypeGetListV1ResponseMPayloadAllOf>(){}.getType();
    }
    
    if ("EzsignfoldertypeListElement".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignfoldertypeListElement>(){}.getType();
    }
    
    if ("EzsignformfieldResponse".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignformfieldResponse>(){}.getType();
    }
    
    if ("EzsignformfieldResponseCompound".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignformfieldResponseCompound>(){}.getType();
    }
    
    if ("EzsignformfieldgroupResponse".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignformfieldgroupResponse>(){}.getType();
    }
    
    if ("EzsignformfieldgroupResponseCompound".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignformfieldgroupResponseCompound>(){}.getType();
    }
    
    if ("EzsignformfieldgroupResponseCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignformfieldgroupResponseCompoundAllOf>(){}.getType();
    }
    
    if ("EzsignpageResponse".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignpageResponse>(){}.getType();
    }
    
    if ("EzsignsignatureCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignatureCreateObjectV1Request>(){}.getType();
    }
    
    if ("EzsignsignatureCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignatureCreateObjectV1Response>(){}.getType();
    }
    
    if ("EzsignsignatureCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignatureCreateObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignsignatureCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignatureCreateObjectV1ResponseMPayload>(){}.getType();
    }
    
    if ("EzsignsignatureDeleteObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignatureDeleteObjectV1Response>(){}.getType();
    }
    
    if ("EzsignsignatureGetObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignatureGetObjectV1Response>(){}.getType();
    }
    
    if ("EzsignsignatureGetObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignatureGetObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("EzsignsignatureRequest".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignatureRequest>(){}.getType();
    }
    
    if ("EzsignsignatureRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignatureRequestCompound>(){}.getType();
    }
    
    if ("EzsignsignerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignerRequest>(){}.getType();
    }
    
    if ("EzsignsignerRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignerRequestCompound>(){}.getType();
    }
    
    if ("EzsignsignerRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignerRequestCompoundAllOf>(){}.getType();
    }
    
    if ("EzsignsignerRequestCompoundContact".equalsIgnoreCase(className)) {
      return new TypeToken<EzsignsignerRequestCompoundContact>(){}.getType();
    }
    
    if ("FieldEEzsigndocumentStep".equalsIgnoreCase(className)) {
      return new TypeToken<FieldEEzsigndocumentStep>(){}.getType();
    }
    
    if ("FieldEEzsignfolderSendreminderfrequency".equalsIgnoreCase(className)) {
      return new TypeToken<FieldEEzsignfolderSendreminderfrequency>(){}.getType();
    }
    
    if ("FieldEEzsignfolderStep".equalsIgnoreCase(className)) {
      return new TypeToken<FieldEEzsignfolderStep>(){}.getType();
    }
    
    if ("FieldEEzsignfoldertypePrivacylevel".equalsIgnoreCase(className)) {
      return new TypeToken<FieldEEzsignfoldertypePrivacylevel>(){}.getType();
    }
    
    if ("FieldEEzsignsignatureType".equalsIgnoreCase(className)) {
      return new TypeToken<FieldEEzsignsignatureType>(){}.getType();
    }
    
    if ("FieldEPhoneType".equalsIgnoreCase(className)) {
      return new TypeToken<FieldEPhoneType>(){}.getType();
    }
    
    if ("FieldEUserType".equalsIgnoreCase(className)) {
      return new TypeToken<FieldEUserType>(){}.getType();
    }
    
    if ("FieldEUserTypeSSPR".equalsIgnoreCase(className)) {
      return new TypeToken<FieldEUserTypeSSPR>(){}.getType();
    }
    
    if ("FranchisereferalincomeCreateObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<FranchisereferalincomeCreateObjectV1Request>(){}.getType();
    }
    
    if ("FranchisereferalincomeCreateObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<FranchisereferalincomeCreateObjectV1Response>(){}.getType();
    }
    
    if ("FranchisereferalincomeCreateObjectV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<FranchisereferalincomeCreateObjectV1ResponseAllOf>(){}.getType();
    }
    
    if ("FranchisereferalincomeCreateObjectV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<FranchisereferalincomeCreateObjectV1ResponseMPayload>(){}.getType();
    }
    
    if ("FranchisereferalincomeRequest".equalsIgnoreCase(className)) {
      return new TypeToken<FranchisereferalincomeRequest>(){}.getType();
    }
    
    if ("FranchisereferalincomeRequestCompound".equalsIgnoreCase(className)) {
      return new TypeToken<FranchisereferalincomeRequestCompound>(){}.getType();
    }
    
    if ("FranchisereferalincomeRequestCompoundAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<FranchisereferalincomeRequestCompoundAllOf>(){}.getType();
    }
    
    if ("GlobalCustomerGetEndpointV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<GlobalCustomerGetEndpointV1Response>(){}.getType();
    }
    
    if ("HeaderAcceptLanguage".equalsIgnoreCase(className)) {
      return new TypeToken<HeaderAcceptLanguage>(){}.getType();
    }
    
    if ("ListGetListpresentationV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<ListGetListpresentationV1Response>(){}.getType();
    }
    
    if ("ListGetListpresentationV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<ListGetListpresentationV1ResponseAllOf>(){}.getType();
    }
    
    if ("ListGetListpresentationV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<ListGetListpresentationV1ResponseMPayload>(){}.getType();
    }
    
    if ("ListSaveListpresentationV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<ListSaveListpresentationV1Request>(){}.getType();
    }
    
    if ("ListSaveListpresentationV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<ListSaveListpresentationV1Response>(){}.getType();
    }
    
    if ("ListpresentationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ListpresentationRequest>(){}.getType();
    }
    
    if ("MultilingualApikeyDescription".equalsIgnoreCase(className)) {
      return new TypeToken<MultilingualApikeyDescription>(){}.getType();
    }
    
    if ("PhoneRequest".equalsIgnoreCase(className)) {
      return new TypeToken<PhoneRequest>(){}.getType();
    }
    
    if ("SsprResetPasswordRequestV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<SsprResetPasswordRequestV1Request>(){}.getType();
    }
    
    if ("SsprResetPasswordV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<SsprResetPasswordV1Request>(){}.getType();
    }
    
    if ("SsprSendUsernamesV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<SsprSendUsernamesV1Request>(){}.getType();
    }
    
    if ("SsprUnlockAccountRequestV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<SsprUnlockAccountRequestV1Request>(){}.getType();
    }
    
    if ("SsprUnlockAccountV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<SsprUnlockAccountV1Request>(){}.getType();
    }
    
    if ("SsprValidateTokenV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<SsprValidateTokenV1Request>(){}.getType();
    }
    
    if ("UNUSEDEzsigndocumentEditObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<UNUSEDEzsigndocumentEditObjectV1Request>(){}.getType();
    }
    
    if ("UNUSEDEzsigndocumentEditObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<UNUSEDEzsigndocumentEditObjectV1Response>(){}.getType();
    }
    
    if ("UNUSEDEzsignfolderEditObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<UNUSEDEzsignfolderEditObjectV1Request>(){}.getType();
    }
    
    if ("UNUSEDEzsignfolderEditObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<UNUSEDEzsignfolderEditObjectV1Response>(){}.getType();
    }
    
    if ("UNUSEDEzsignfoldersignerassociationEditObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<UNUSEDEzsignfoldersignerassociationEditObjectV1Request>(){}.getType();
    }
    
    if ("UNUSEDEzsignfoldersignerassociationEditObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<UNUSEDEzsignfoldersignerassociationEditObjectV1Response>(){}.getType();
    }
    
    if ("UNUSEDEzsignsignatureEditObjectV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<UNUSEDEzsignsignatureEditObjectV1Request>(){}.getType();
    }
    
    if ("UNUSEDEzsignsignatureEditObjectV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<UNUSEDEzsignsignatureEditObjectV1Response>(){}.getType();
    }
    
    if ("UserCreateEzsignuserV1Request".equalsIgnoreCase(className)) {
      return new TypeToken<UserCreateEzsignuserV1Request>(){}.getType();
    }
    
    if ("UserCreateEzsignuserV1Response".equalsIgnoreCase(className)) {
      return new TypeToken<UserCreateEzsignuserV1Response>(){}.getType();
    }
    
    if ("UserCreateEzsignuserV1ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<UserCreateEzsignuserV1ResponseAllOf>(){}.getType();
    }
    
    if ("UserCreateEzsignuserV1ResponseMPayload".equalsIgnoreCase(className)) {
      return new TypeToken<UserCreateEzsignuserV1ResponseMPayload>(){}.getType();
    }
    
    if ("UserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<UserResponse>(){}.getType();
    }
    
    if ("WebhookEzsignDocumentCompleted".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookEzsignDocumentCompleted>(){}.getType();
    }
    
    if ("WebhookEzsignDocumentCompletedAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookEzsignDocumentCompletedAllOf>(){}.getType();
    }
    
    if ("WebhookEzsignFolderCompleted".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookEzsignFolderCompleted>(){}.getType();
    }
    
    if ("WebhookEzsignFolderCompletedAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookEzsignFolderCompletedAllOf>(){}.getType();
    }
    
    if ("WebhookResponse".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookResponse>(){}.getType();
    }
    
    if ("WebhookUserUserCreated".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookUserUserCreated>(){}.getType();
    }
    
    if ("WebhookUserUserCreatedAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookUserUserCreatedAllOf>(){}.getType();
    }
    
    if ("WebsiteRequest".equalsIgnoreCase(className)) {
      return new TypeToken<WebsiteRequest>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
